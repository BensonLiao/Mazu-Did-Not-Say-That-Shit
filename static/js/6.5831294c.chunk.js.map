{"version":3,"sources":["utils/dataSummary.js","components/ReactionTopMostIcon.js","components/ReactionSecondMostIcon.js","components/ReactionThirdMostIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","components/RelevantCommentToggle.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","components/CommentAvatar.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/MyCommentPlaceholder.js","containers/FeedbackActionComment.js","containers/UpdateComment.js","components/MyCommentAttachButton.js","components/MyCommentInput.js","components/MyComment.js","components/CommentPlaceholder.js","components/CommentReactionSummary.js","hooks/useCompNarrow.js","containers/DisplayCommentReactSummary.js","styles/menu.js","components/MenuButton.js","containers/HideComment.js","containers/DeleteComment.js","components/CommentMenu.js","components/CommentMenuToggle.js","hooks/useCompVisible.js","components/CommentWithReactionSummary.js","components/Comment.js","components/CommentFeedbackButton.js","containers/FeedbackActionReactToComment.js","containers/ShowComment.js","components/CommentFeedback.js","components/CommentWithFeedback.js","hooks/useMouseHover.js","containers/DisplayComment.js","components/CommentSection.js","containers/DisplayCommentSection.js"],"names":["__webpack_exports__","getRankingReactions","reactions","length","sortedReactions","Object","keys","REACTIONS","map","feeling","totalFeeling","filter","reactor","total","sort","a","b","_Users_bensonliao_mazudidnotsaythatshit_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getReactionSummary","rank","this","summary","all","forText","forTip","topMost","secondMost","thirdMost","topMostTip","secondMostTip","thirdMostTip","topMostReactions","secondMostReactions","thirdMostReactions","textFormat","getReactionsCount","getFeedbacksCountTip","getCommentReactionSummary","getCommentReactionsCount","getCommentReactionsCountTip","COMMENT","appConst","component","ReactionTopMostIconWrapper","styled","div","_templateObject","styledTooltipOverrideStyle","props","getIconSize","withComponent","displayInlineBlock","TopMostIcon","i","_templateObject2","reactionIconBaseStyle","reactionIconSummaryStyle","reactionIconStyle","reactFeeling","tooltipId","ReactionTopMostIcon","_ref","countSummary","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","data-for","data-tip","_StyledTooltip__WEBPACK_IMPORTED_MODULE_4__","id","effect","multiline","bg","cssConst","tooltipBackgroundBlack","defaultProps","LIKE","displayName","ReactionSecondMostIconWrapper","SecondMostIcon","ReactionSecondMostIcon","HAHA","ReactionThirdMostIconWrapper","ThirdMostIcon","ReactionThirdMostIcon","LOVE","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","RelevantIconWrapper","displayFlex","baseFontSize","toggleOption","reactedButtonTextColor","RelevantIcon","relevantIconStyle","RelevantCommentToggle","_this","instance","Constructor","TypeError","_classCallCheck","toggleOptionMenu","isToggleOptionOpen","state","setState","options","protoProps","staticProps","subClass","superClass","create","value","Component","_this$state","react_default","onClick","Container","CommentAvatar_templateObject","isHidden","CommentAvatarWrapper","CommentAvatar_templateObject2","CommentAvatarImg","img","_templateObject3","CommentAvatar","_ref2","profileName","profileLink","profileImg","imgUrl","imgBaseUrl","concat","renderTag","href","as","src","alt","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MyCommentPlaceholderWrapper","MyCommentPlaceholder_templateObject","commentPlaceholderColor","commentPlaceholderWrapperStyle","MyCommentInput","input","MyCommentPlaceholder_templateObject2","baseCommentInputStyle","onIME","MyCommentPlaceholder","doCommentAction","doDeleteComment","inputId","saying","stateContext","useContextState","handleKeyDown","event","type","toggleEditMode","shiftKey","console","log","inputRef","document","getElementById","prepareCommentAction","MyCommentPlaceholder_MyCommentInput","assign","onKeyDown","onCompositionStart","onCompositionEnd","defaultValue","connect","ownProps","reactId","myCommentInputCompId","dispatch","actionData","entities","uuidv1","time","attachMedia","mediaType","user","you","targetId","FEEDBACK","TARGET","feedbackComment","commentId","updateComment","undoComment","MyCommentAttachButtonWrapper","MyCommentAttachButton_templateObject","attachButtonBaseStyle","commentAttachIconSize","cssesc","myCommentAttachIconImg","EmojiAttachButton","span","MyCommentAttachButton_templateObject2","PhotoAttachButton","MyCommentAttachButton_templateObject3","GifAttachButton","_templateObject4","StickerAttachButton","_templateObject5","MyCommentAttachButton","MyCommentInputWrapper","MyCommentInput_templateObject","commentTextBackground","alignCenter","justifyContentSpaceBetween","FeedbackActionComment","placeholder","UpdateComment","components_MyCommentAttachButton","MyCommentWrapper","MyComment_templateObject","MyComment","inEditMode","components_CommentAvatar","DEFAULT","components_MyCommentInput","CommentPlaceholder_templateObject","commentPlaceholderColorBlack","CommentPlaceholderWrapper","CommentPlaceholder_templateObject2","CommentContent","CommentPlaceholder_templateObject3","isHashTag","commentFeedbackButtonTextColor","CommentMediaWrapper","CommentPlaceholder_templateObject4","CommentMediaImage","CommentPlaceholder_templateObject5","VerifiedBadge","_templateObject6","verifiedBadgeIconStyle","CommentPlaceholder","isVerified","separatedContent","CommentPlaceholder_Container","c","idx","ProfileLink","content","getCommentContent","CommentReactionSummary_templateObject","postBackgroundWhite","isNarrowComp","wideCommentReactionSummaryStyle","commentReactionSummaryStyle","CommentReactionSummaryWrapper","CommentReactionSummary_templateObject2","displayBlock","CommentReactionCount","CommentReactionSummary_templateObject3","CommentReactionSummary","_ref3","reactionIds","compId","_useState","useState","_useState2","slicedToArray","setIsNarrowComp","useEffect","targetComp","clientWidth","useCompNarrow","reactionArray","react","reactionSummary","dataSummary","CommentReactionSummary_Container","StyledTooltip","html","getCommentReactionIds","getCommentReactions","menuItemHideComment","commentMenu","menuItemEditComment","commentMenu2","menuItemDeleteComment","MenuItemButtonWrapper","MenuButton_templateObject","alignYAxisCenter","btnIcon","toggleMenuItemBorderColor","toggleMenuItemTextColor","toggleMenuItemHoverBackground","toggleMenuItemBorderHoverColor","toggleMenuItemTextHoverColor","MenuItemButton","MenuButton_templateObject2","MenuButton","btnText","toggleCommentVisibility","CommentMenuWrapper","CommentMenu_templateObject","CommentMenuWrapperTriangle","CommentMenu_templateObject2","menu","MenuWrapper","CommentMenu_templateObject3","MenuPanel","CommentMenu_templateObject4","Menu","ul","CommentMenu_templateObject5","MenuItem","li","CommentMenu_templateObject6","CommentMenu","isYour","components_MenuButton","DeleteComment","HideComment","MenuToggleWrapper","CommentMenuToggle_templateObject","MenuToggle","CommentMenuToggle_templateObject2","menuToggle","CommentMenuToggle","isHover","_useCompVisible","initialIsVisible","isCompVisible","setIsCompVisible","ref","useRef","handleHideComp","handleClick","current","insideTarget","contains","addEventListener","removeEventListener","useCompVisible","tipText","components_CommentMenu","CommentWithReactionSummary_templateObject","CommentWithReactionSummaryWrapper","CommentWithReactionSummary_templateObject2","contentSeparated","displayInlineFlex","CommentWithReactionSummary","replace","split","startsWith","getSeparateContent","push","CommentWithReactionSummary_Container","components_CommentPlaceholder","DisplayCommentReactSummary","components_CommentMenuToggle","Comment_templateObject","Comment","Comment_Container","components_CommentWithReactionSummary","CommentFeedbackButtonWrapper","CommentFeedbackButton_templateObject","color","CommentFeedbackButton","displayText","reacted","passByPropsOrRedux","fakeReactId","isReactedToComment","doReactAction","feedbackReactToComment","undoReactAction","undoReactToComment","components_CommentFeedbackButton","CommentFeedbackWrapper","CommentFeedback_templateObject","commentFeedbackTextColor","CommentFeedback","Fragment","ShowComment","containers_FeedbackActionReactToComment","getActionButton","page","CommentAndFeedbackWrapper","CommentWithFeedback_templateObject","yourCommentBorderStyle","CommentWithFeedback","comment","_useContextState","_useMouseHover","useMouseHover","_useMouseHover2","setIsHover","_comment$user","components_MyComment","components_CommentFeedback","onMouseEnter","onMouseLeave","components_Comment","getComment","setEditMode","StateProvider","initialState","components_CommentWithFeedback","CommentSectionWrapper","CommentSection_templateObject","postSectionBorder","CommentSection","commentIds","RelevantCommentToggle_RelevantCommentToggle","DisplayComment","getCommentIds"],"mappings":"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","file":"static/js/6.5831294c.chunk.js","sourcesContent":["import { REACTIONS } from '../actions'\nimport textFormat from './textFormat'\n\nexport default {\n  getRankingReactions(reactions) {\n    if (reactions.length === 0) return []\n    const reactionsCount = Object.keys(REACTIONS).map(feeling => {\n      const totalFeeling = reactions.filter(\n        reactor => reactor.feeling === feeling\n      ).length\n      return { feeling, total: totalFeeling }\n    })\n    const sortedReactions = reactionsCount.sort((a, b) => {\n      return b.total - a.total\n    })\n    const rank = [...sortedReactions]\n    return rank\n  },\n  getReactionSummary(reactions) {\n    if (reactions.length === 0) return ''\n    const rank = this.getRankingReactions(reactions)\n    const summary = {\n      all: {\n        forText: '',\n        forTip: ''\n      },\n      topMost: rank[0],\n      secondMost: rank[1],\n      thirdMost: rank[2],\n      topMostTip: '',\n      secondMostTip: '',\n      thirdMostTip: ''\n    }\n    const topMostReactions = reactions.filter(\n      reactor => reactor.feeling === rank[0].feeling\n    )\n    const secondMostReactions = reactions.filter(\n      reactor => reactor.feeling === rank[1].feeling\n    )\n    const thirdMostReactions = reactions.filter(\n      reactor => reactor.feeling === rank[2].feeling\n    )\n    summary.all.forText = textFormat.getReactionsCount(reactions)\n    summary.all.forTip = textFormat.getFeedbacksCountTip(reactions, 18)\n    summary.topMostTip = textFormat.getFeedbacksCountTip(topMostReactions, 18)\n    summary.secondMostTip = textFormat.getFeedbacksCountTip(\n      secondMostReactions,\n      18\n    )\n    summary.thirdMostTip = textFormat.getFeedbacksCountTip(\n      thirdMostReactions,\n      18\n    )\n    return summary\n  },\n  getCommentReactionSummary(reactions) {\n    if (reactions.length === 0) return ''\n    const rank = this.getRankingReactions(reactions)\n    const summary = {\n      forText: '',\n      forTip: '',\n      topMost: rank[0],\n      secondMost: rank[1],\n      thirdMost: rank[2]\n    }\n    summary.forText = textFormat.getCommentReactionsCount(reactions)\n    summary.forTip = textFormat.getCommentReactionsCountTip(reactions, rank)\n    // console.log('summary.forTip', summary.forTip)\n    return summary\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { REACTIONS } from '../actions'\nimport StyledTooltip from './StyledTooltip'\nimport appConst from '../utils/constants'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock } from '../styles/page'\nimport {\n  styledTooltipOverrideStyle,\n  getIconSize,\n  reactionIconBaseStyle,\n  reactionIconSummaryStyle,\n  reactionIconStyle\n} from '../styles/post'\n\nconst {\n  component: { COMMENT }\n} = appConst\n\nconst ReactionTopMostIconWrapper = styled.div`\n  ${styledTooltipOverrideStyle}\n  ${props => getIconSize(props.withComponent)}\n  ${props => props.withComponent === COMMENT && displayInlineBlock}\n  ${props => props.withComponent === COMMENT && 'border-right: 2px solid #fff;'}\n  position: relative;\n  margin-left: -2px;\n  z-index: 3;\n  vertical-align: top;\n`\n\nconst TopMostIcon = styled.i`\n  ${reactionIconBaseStyle}\n  ${reactionIconSummaryStyle}\n  ${props => reactionIconStyle(props.reactFeeling, props.withComponent)}\n`\n\nconst tooltipId = 'tip-for-post-first-most-reaction'\n\nconst ReactionTopMostIcon = ({ reactFeeling, withComponent, countSummary }) => {\n  return (\n    <ReactionTopMostIconWrapper\n      data-for={tooltipId}\n      data-tip={countSummary}\n      withComponent={withComponent}\n    >\n      <TopMostIcon reactFeeling={reactFeeling} withComponent={withComponent} />\n      {countSummary.length > 0 && (\n        <StyledTooltip\n          id={tooltipId}\n          effect=\"solid\"\n          multiline\n          bg={cssConst.tooltipBackgroundBlack}\n        />\n      )}\n    </ReactionTopMostIconWrapper>\n  )\n}\n\nReactionTopMostIcon.defaultProps = {\n  reactFeeling: REACTIONS.LIKE,\n  countSummary: ''\n}\n\nReactionTopMostIcon.propTypes = {\n  reactFeeling: PropTypes.oneOf(Object.keys(REACTIONS)),\n  countSummary: PropTypes.string,\n  withComponent: PropTypes.string.isRequired\n}\n\nReactionTopMostIcon.displayName = 'ReactionTopMostIcon'\n\nexport default ReactionTopMostIcon\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { REACTIONS } from '../actions'\nimport StyledTooltip from './StyledTooltip'\nimport appConst from '../utils/constants'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock } from '../styles/page'\nimport {\n  styledTooltipOverrideStyle,\n  getIconSize,\n  reactionIconBaseStyle,\n  reactionIconSummaryStyle,\n  reactionIconStyle\n} from '../styles/post'\n\nconst {\n  component: { COMMENT }\n} = appConst\n\nconst ReactionSecondMostIconWrapper = styled.div`\n  ${styledTooltipOverrideStyle}\n  ${props => getIconSize(props.withComponent)}\n  ${props => props.withComponent === COMMENT && displayInlineBlock}\n  ${props => props.withComponent === COMMENT && 'border-right: 2px solid #fff;'}\n  position: relative;\n  margin-left: -2px;\n  z-index: 2;\n  vertical-align: top;\n`\n\nconst SecondMostIcon = styled.i`\n  ${reactionIconBaseStyle}\n  ${reactionIconSummaryStyle}\n  ${props => reactionIconStyle(props.reactFeeling, props.withComponent)}\n`\n\nconst tooltipId = 'tip-for-post-second-most-reaction'\n\nconst ReactionSecondMostIcon = ({\n  reactFeeling,\n  withComponent,\n  countSummary\n}) => {\n  return (\n    <ReactionSecondMostIconWrapper\n      data-for={tooltipId}\n      data-tip={countSummary}\n      withComponent={withComponent}\n    >\n      <SecondMostIcon\n        reactFeeling={reactFeeling}\n        withComponent={withComponent}\n      />\n      {countSummary.length > 0 && (\n        <StyledTooltip\n          id={tooltipId}\n          effect=\"solid\"\n          multiline\n          bg={cssConst.tooltipBackgroundBlack}\n        />\n      )}\n    </ReactionSecondMostIconWrapper>\n  )\n}\n\nReactionSecondMostIcon.defaultProps = {\n  reactFeeling: REACTIONS.HAHA,\n  countSummary: ''\n}\n\nReactionSecondMostIcon.propTypes = {\n  reactFeeling: PropTypes.oneOf(Object.keys(REACTIONS)),\n  withComponent: PropTypes.string.isRequired,\n  countSummary: PropTypes.string\n}\n\nReactionSecondMostIcon.displayName = 'ReactionSecondMostIcon'\n\nexport default ReactionSecondMostIcon\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { REACTIONS } from '../actions'\nimport StyledTooltip from './StyledTooltip'\nimport appConst from '../utils/constants'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock } from '../styles/page'\nimport {\n  styledTooltipOverrideStyle,\n  getIconSize,\n  reactionIconBaseStyle,\n  reactionIconSummaryStyle,\n  reactionIconStyle\n} from '../styles/post'\n\nconst {\n  component: { COMMENT }\n} = appConst\n\nconst ReactionThirdMostIconWrapper = styled.div`\n  ${styledTooltipOverrideStyle}\n  ${props => getIconSize(props.withComponent)}\n  ${props => props.withComponent === COMMENT && displayInlineBlock}\n  ${props => props.withComponent === COMMENT && 'border-right: 2px solid #fff;'}\n  position: relative;\n  margin-left: -2px;\n  margin-right: 2px;\n  z-index: 1;\n  vertical-align: top;\n`\n\nconst ThirdMostIcon = styled.i`\n  ${reactionIconBaseStyle}\n  ${reactionIconSummaryStyle}\n  ${props => reactionIconStyle(props.reactFeeling, props.withComponent)}\n`\n\nconst tooltipId = 'tip-for-post-third-most-reaction'\n\nconst ReactionThirdMostIcon = ({\n  reactFeeling,\n  withComponent,\n  countSummary\n}) => {\n  return (\n    <ReactionThirdMostIconWrapper\n      data-for={tooltipId}\n      data-tip={countSummary}\n      withComponent={withComponent}\n    >\n      <ThirdMostIcon\n        reactFeeling={reactFeeling}\n        withComponent={withComponent}\n      />\n      {countSummary.length > 0 && (\n        <StyledTooltip\n          id={tooltipId}\n          effect=\"solid\"\n          multiline\n          bg={cssConst.tooltipBackgroundBlack}\n        />\n      )}\n    </ReactionThirdMostIconWrapper>\n  )\n}\n\nReactionThirdMostIcon.defaultProps = {\n  reactFeeling: REACTIONS.LOVE,\n  countSummary: ''\n}\n\nReactionThirdMostIcon.propTypes = {\n  reactFeeling: PropTypes.oneOf(Object.keys(REACTIONS)),\n  withComponent: PropTypes.string.isRequired,\n  countSummary: PropTypes.string\n}\n\nReactionThirdMostIcon.displayName = 'ReactionThirdMostIcon'\n\nexport default ReactionThirdMostIcon\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport { displayFlex } from '../styles/page'\nimport { relevantIconStyle } from '../styles/post'\n\nconst RelevantIconWrapper = styled.div`\n  ${displayFlex}\n  font-size: ${cssConst.baseFontSize};\n  margin: 8px 12px;\n  color: ${props =>\n    (props.toggleOption ? cssConst.reactedButtonTextColor : '#444950')};\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst RelevantIcon = styled.i`\n  ${props => relevantIconStyle(props.toggleOption)}\n`\n\nexport default class RelevantCommentToggle extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isToggleOptionOpen: false,\n      options: ['最相關', '從新到舊', '所有留言']\n    }\n  }\n\n  toggleOptionMenu = () => {\n    const { isToggleOptionOpen } = this.state\n    this.setState({ isToggleOptionOpen: !isToggleOptionOpen })\n  }\n\n  render() {\n    const { isToggleOptionOpen, options } = this.state\n\n    return (\n      <RelevantIconWrapper\n        toggleOption={isToggleOptionOpen}\n        onClick={this.toggleOptionMenu}\n      >\n        {options[0]}\n        <RelevantIcon toggleOption={isToggleOptionOpen} />\n      </RelevantIconWrapper>\n    )\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { imgBaseUrl } from '../styles/post'\nimport appConst from '../utils/constants'\n\nconst Container = styled.div`\n  float: left;\n  ${({ isHidden }) => isHidden && 'opacity: 0.5;'}\n`\n\nconst CommentAvatarWrapper = styled.div`\n  position: relative;\n  display: block;\n`\n\nconst CommentAvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  margin-right: 6px;\n  overflow: hidden;\n`\n\nconst CommentAvatar = ({\n  profileName,\n  profileLink,\n  profileImg,\n  withComponent,\n  isHidden\n}) => {\n  const imgUrl = imgBaseUrl(`./${profileImg}`)\n  const renderTag = withComponent === appConst.component.COMMENT ? 'a' : 'span'\n  return (\n    <Container isHidden={isHidden}>\n      <CommentAvatarWrapper href={profileLink} as={renderTag}>\n        <CommentAvatarImg src={imgUrl} alt={profileName} />\n      </CommentAvatarWrapper>\n    </Container>\n  )\n}\n\nCommentAvatar.propTypes = {\n  profileName: PropTypes.string,\n  profileLink: PropTypes.string,\n  profileImg: PropTypes.string,\n  withComponent: PropTypes.string,\n  isHidden: PropTypes.bool\n}\n\nCommentAvatar.defaultProps = {\n  profileName: '金乘五',\n  profileLink: 'https://www.facebook.com/takeshikaneshirofanspage/',\n  profileImg: 'goldxfive.png',\n  withComponent: appConst.component.COMMENT,\n  isHidden: false\n}\n\nexport default CommentAvatar\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport {\n  commentPlaceholderWrapperStyle,\n  baseCommentInputStyle\n} from '../styles/post'\nimport { useContextState } from '../containers/StateProvider'\n\nconst MyCommentPlaceholderWrapper = styled.div`\n  color: ${cssConst.commentPlaceholderColor};\n  font-size: ${cssConst.baseFontSize};\n  ${commentPlaceholderWrapperStyle}\n`\n\nconst MyCommentInput = styled.input`\n  ${baseCommentInputStyle}\n  width: 300px;\n  appearance: none;\n  border-radius: 0;\n  outline: none;\n  padding: 0;\n  border: 0 solid transparent;\n  background: transparent;\n  font-size: ${cssConst.baseFontSize};\n`\n\nconst prepareCommentAction = (inputId, doCommentAction, doDeleteComment) => {\n  const inputRef = document.getElementById(inputId)\n  if (inputRef.value === '') {\n    doDeleteComment()\n  } else {\n    doCommentAction()\n    inputRef.value = ''\n  }\n}\n\n// Indicate if user are using IME(Input Method) for non-latin language.\nlet onIME = false\n\nconst MyCommentPlaceholder = ({\n  doCommentAction,\n  doDeleteComment,\n  inputId,\n  saying,\n  ...props\n}) => {\n  // Make stateContext to null if this comp rendered outside of StateProvider\n  const stateContext = useContextState() || null\n  const handleKeyDown = event => {\n    if (event.type === 'compositionstart') onIME = true\n    if (event.type === 'compositionend') onIME = false\n    if (event.key === 'Enter' && onIME) {\n      // When in chinese IME, press Enter won't trigger compositionend,\n      // so we have to handle it manually.\n      onIME = false\n    } else if (event.key === 'Enter' && !onIME) {\n      if (event.shiftKey) {\n        console.log('doExpandNewLine')\n      } else {\n        prepareCommentAction(inputId, doCommentAction, doDeleteComment)\n        if (stateContext) {\n          const { toggleEditMode } = stateContext\n          toggleEditMode()\n        }\n      }\n    } else if (event.key === 'Escape') {\n      if (stateContext) {\n        const { toggleEditMode } = stateContext\n        toggleEditMode()\n      }\n    }\n  }\n  return (\n    <MyCommentPlaceholderWrapper>\n      <MyCommentInput\n        onKeyDown={handleKeyDown}\n        onCompositionStart={handleKeyDown}\n        onCompositionEnd={handleKeyDown}\n        id={inputId}\n        defaultValue={saying}\n        {...props}\n      />\n    </MyCommentPlaceholderWrapper>\n  )\n}\n\nMyCommentPlaceholder.displayName = 'MyCommentPlaceholder'\nMyCommentPlaceholder.propTypes = {\n  /**\n   * For redux action to add or update comment\n   */\n  doCommentAction: PropTypes.func.isRequired,\n  /**\n   * For redux action to delete comment\n   */\n  doDeleteComment: PropTypes.func,\n  /**\n   * For doCommentAction to retrieve input value from input id\n   */\n  inputId: PropTypes.string.isRequired,\n  /**\n   * For initial input value\n   */\n  saying: PropTypes.string\n}\nMyCommentPlaceholder.defaultProps = {\n  saying: '',\n  doDeleteComment: () => {}\n}\n\nexport default MyCommentPlaceholder\n","import uuidv1 from 'uuid/v1'\nimport { connect } from 'react-redux'\nimport { FEEDBACK, feedbackComment } from '../actions'\nimport MyCommentPlaceholder from '../components/MyCommentPlaceholder'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    reactId: ownProps.reactId,\n    inputId: ownProps.myCommentInputCompId\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  doCommentAction: () => {\n    const saying = document.getElementById(ownProps.myCommentInputCompId).value\n    const actionData = {\n      entities: {\n        id: uuidv1(),\n        saying,\n        time: '1分鐘',\n        attachMedia: '',\n        mediaType: '',\n        user: ownProps.you,\n        targetId: FEEDBACK.TARGET,\n        reactId: uuidv1(),\n        isHidden: false\n      }\n    }\n    return dispatch(feedbackComment(actionData))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyCommentPlaceholder)\n","import { connect } from 'react-redux'\nimport { updateComment, undoComment } from '../actions'\nimport MyCommentPlaceholder from '../components/MyCommentPlaceholder'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    inputId: ownProps.commentId,\n    saying: ownProps.saying\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  doCommentAction: () => {\n    const saying = document.getElementById(ownProps.commentId).value\n    const actionData = {\n      id: ownProps.commentId,\n      saying\n    }\n    return dispatch(updateComment(actionData))\n  },\n  doDeleteComment: () => dispatch(undoComment(ownProps.commentId))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyCommentPlaceholder)\n","import React from 'react'\nimport styled from 'styled-components'\nimport cssesc from 'cssesc'\nimport cssConst from '../styles/constants'\nimport myCommentAttachIconImg from '../assets/img/my-comment.png'\n\nconst MyCommentAttachButtonWrapper = styled.div`\n  display: block;\n`\n\nconst attachButtonBaseStyle = `\n  display: inline-block;\n  height: ${cssConst.commentAttachIconSize};\n  width: ${cssConst.commentAttachIconSize};\n  margin-left: 10px;\n  cursor: pointer;\n  background-image: url(${cssesc(myCommentAttachIconImg)});\n  background-repeat: no-repeat;\n  background-size: 55px 237px;\n`\n\nconst EmojiAttachButton = styled.span`\n  ${attachButtonBaseStyle}\n  background-position: -34px -169px;\n`\n\nconst PhotoAttachButton = styled.span`\n  ${attachButtonBaseStyle}\n  background-position: -36px -150px;\n`\n\nconst GifAttachButton = styled.span`\n  ${attachButtonBaseStyle}\n  background-position: -34px -186px;\n`\n\nconst StickerAttachButton = styled.span`\n  ${attachButtonBaseStyle}\n  background-position: -34px -203px;\n`\n\nconst MyCommentAttachButton = () => {\n  return (\n    <MyCommentAttachButtonWrapper>\n      <EmojiAttachButton />\n      <PhotoAttachButton />\n      <GifAttachButton />\n      <StickerAttachButton />\n    </MyCommentAttachButtonWrapper>\n  )\n}\n\nexport default MyCommentAttachButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport appConst from '../utils/constants'\nimport {\n  displayFlex,\n  alignCenter,\n  justifyContentSpaceBetween\n} from '../styles/page'\nimport FeedbackActionComment from '../containers/FeedbackActionComment'\nimport UpdateComment from '../containers/UpdateComment'\nimport MyCommentAttachButton from './MyCommentAttachButton'\n\nconst MyCommentInputWrapper = styled.div`\n  background-color: ${cssConst.commentTextBackground};\n  border: 1px solid #ccd0d5;\n  border-radius: 16px;\n  ${displayFlex}\n  ${alignCenter}\n  ${justifyContentSpaceBetween}\n  cursor: text;\n  flex: 1 1 auto;\n  line-height: 16px;\n  overflow: hidden;\n  padding: 7px 12px;\n`\n\nconst { you } = appConst\n\nconst MyCommentInput = ({ commentId, saying, myCommentInputCompId }) => {\n  return (\n    <MyCommentInputWrapper>\n      {commentId === '' && myCommentInputCompId !== '' && (\n        <FeedbackActionComment\n          type=\"text\"\n          placeholder=\"留言......\"\n          you={you}\n          myCommentInputCompId={myCommentInputCompId}\n        />\n      )}\n      {commentId !== '' && myCommentInputCompId === '' && (\n        <UpdateComment type=\"text\" commentId={commentId} saying={saying} />\n      )}\n      <MyCommentAttachButton />\n    </MyCommentInputWrapper>\n  )\n}\n\nMyCommentInput.propTypes = {\n  commentId: PropTypes.string,\n  saying: PropTypes.string,\n  myCommentInputCompId: PropTypes.string\n}\n\nMyCommentInput.defaultProps = {\n  commentId: '',\n  saying: '',\n  myCommentInputCompId: ''\n}\n\nexport default MyCommentInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport appConst from '../utils/constants'\nimport { displayFlex, alignCenter } from '../styles/page'\nimport CommentAvatar from './CommentAvatar'\nimport MyCommentInput from './MyCommentInput'\n\nconst MyCommentWrapper = styled.div`\n  ${displayFlex}\n  ${alignCenter}\n  padding: 4px 12px 8px 12px;\n`\n\nconst { myCommentInputCompId, component } = appConst\n\nconst MyComment = ({ inEditMode, commentId, saying }) => {\n  return (\n    <MyCommentWrapper>\n      <CommentAvatar withComponent={component.DEFAULT} />\n      {inEditMode ? (\n        <MyCommentInput commentId={commentId} saying={saying} />\n      ) : (\n        <MyCommentInput myCommentInputCompId={myCommentInputCompId} />\n      )}\n    </MyCommentWrapper>\n  )\n}\n\nMyComment.propTypes = {\n  inEditMode: PropTypes.bool,\n  commentId: PropTypes.string,\n  saying: PropTypes.string\n}\n\nMyComment.defaultProps = {\n  inEditMode: false,\n  commentId: '',\n  saying: ''\n}\n\nexport default MyComment\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock } from '../styles/page'\nimport {\n  imgBaseUrl,\n  commentPlaceholderWrapperStyle,\n  verifiedBadgeIconStyle\n} from '../styles/post'\nimport ProfileLink from './ProfileLink'\n\nconst Container = styled.div`\n  background-color: ${cssConst.commentTextBackground};\n  color: ${cssConst.commentPlaceholderColorBlack};\n  border-radius: 18px;\n  padding: 8px 12px;\n`\n\nconst CommentPlaceholderWrapper = styled.div`\n  font-size: ${cssConst.baseFontSize};\n  ${commentPlaceholderWrapperStyle}\n  flex: 1 1 auto;\n  min-width: 0;\n  width: 100%;\n  white-space: normal;\n  word-break: break-word;\n  word-wrap: break-word;\n`\n\nconst CommentContent = styled.span`\n  ${displayInlineBlock}\n  font-size: ${cssConst.baseFontSize};\n  margin-left: 4px;\n  color: ${props =>\n    (props.isHashTag ? cssConst.commentFeedbackButtonTextColor : 'inherit')};\n  cursor: ${props => (props.isHashTag ? 'pointer' : 'text')};\n`\n\nconst CommentMediaWrapper = styled.div`\n  ${displayInlineBlock}\n  width: 360px;\n  height: 204px;\n`\n\nconst CommentMediaImage = styled.img`\n  width: 360px;\n  height: 204px;\n  object-fit: contain;\n`\n\nconst VerifiedBadge = styled.i`\n  ${verifiedBadgeIconStyle}\n`\n\nconst getCommentContent = (\n  separatedContent,\n  profileName,\n  profileLink,\n  isVerified\n) => {\n  return separatedContent.map((c, idx) => {\n    return (\n      <CommentPlaceholderWrapper key={c.id}>\n        {idx === 0 && (\n          <ProfileLink profileName={profileName} profileLink={profileLink} />\n        )}\n        {idx === 0 && isVerified && <VerifiedBadge />}\n        {c.content !== '' && (\n          <CommentContent isHashTag={c.isHashTag}>{c.content}</CommentContent>\n        )}\n        {c.attachMedia !== '' && (\n          <CommentMediaWrapper>\n            <CommentMediaImage\n              src={imgBaseUrl(`./${c.attachMedia}`)}\n              alt={c.attachMedia}\n            />\n          </CommentMediaWrapper>\n        )}\n      </CommentPlaceholderWrapper>\n    )\n  })\n}\n\nconst CommentPlaceholder = ({\n  profileName,\n  profileLink,\n  isVerified,\n  separatedContent\n}) => {\n  return (\n    <Container>\n      {getCommentContent(\n        separatedContent,\n        profileName,\n        profileLink,\n        isVerified\n      )}\n    </Container>\n  )\n}\n\nCommentPlaceholder.propTypes = {\n  profileName: PropTypes.string,\n  profileLink: PropTypes.string,\n  isVerified: PropTypes.bool,\n  separatedContent: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      content: PropTypes.string,\n      attachMedia: PropTypes.string,\n      isHashTag: PropTypes.bool\n    })\n  )\n}\n\nCommentPlaceholder.defaultProps = {\n  profileName: '台灣工具伯 汪進坪',\n  profileLink: 'https://www.facebook.com/jingping.tw/',\n  isVerified: true,\n  separatedContent: {}\n}\n\nexport default CommentPlaceholder\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport appConst from '../utils/constants'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock, displayBlock } from '../styles/page'\nimport {\n  styledTooltipOverrideStyle,\n  commentReactionSummaryStyle,\n  wideCommentReactionSummaryStyle\n} from '../styles/post'\nimport dataSummary from '../utils/dataSummary'\nimport StyledTooltip from './StyledTooltip'\nimport ReactionTopMostIcon from './ReactionTopMostIcon'\nimport ReactionSecondMostIcon from './ReactionSecondMostIcon'\nimport ReactionThirdMostIcon from './ReactionThirdMostIcon'\nimport useCompNarrow from '../hooks/useCompNarrow'\n\nconst Container = styled.div`\n  ${displayInlineBlock}\n  ${styledTooltipOverrideStyle}\n  background: ${cssConst.postBackgroundWhite};\n  color: ${cssConst.commentPlaceholderColor};\n  ${({ isNarrowComp }) => !isNarrowComp && wideCommentReactionSummaryStyle}\n  ${({ isNarrowComp }) => isNarrowComp && commentReactionSummaryStyle}\n  z-index: 4;\n  border-radius: 10px;\n  box-shadow: 0 1px 3px 0 rgba(0,0,0,.2);\n  font-size: 12px;\n  font-weight: 400;\n  padding: 2px 1px 2px 4px;\n  cursor: pointer;\n`\n\nconst CommentReactionSummaryWrapper = styled.span`\n  ${displayBlock}\n  position: relative;\n  z-index: 0;\n`\n\nconst CommentReactionCount = styled.span`\n  ${displayInlineBlock}\n  color: #777d88;\n  padding: 0 3px 0 2px;\n  white-space: nowrap;\n  font-family: Microsoft JhengHei;\n`\n\nconst CommentReactionSummary = ({ commentId, reactionIds, reactions }) => {\n  const isNarrowComp = useCompNarrow(commentId)\n  const reactionArray = reactionIds\n    .map(id => reactions[id])\n    .filter(react => react.targetId === commentId)\n  const reactionSummary = dataSummary.getCommentReactionSummary(reactionArray)\n  const tooltipId = 'tip-for-comment-reaction'\n  const withComponent = appConst.component.COMMENT\n  return reactionSummary === '' ? null : (\n    <Container\n      data-for={tooltipId}\n      data-tip={reactionSummary.forTip}\n      isNarrowComp={isNarrowComp}\n    >\n      <CommentReactionSummaryWrapper>\n        <ReactionTopMostIcon\n          reactFeeling={reactionSummary.topMost.feeling}\n          withComponent={withComponent}\n        />\n        {reactionSummary.secondMost.total > 0 && (\n          <ReactionSecondMostIcon\n            reactFeeling={reactionSummary.secondMost.feeling}\n            withComponent={withComponent}\n          />\n        )}\n        {reactionSummary.thirdMost.total > 0 && (\n          <ReactionThirdMostIcon\n            reactFeeling={reactionSummary.thirdMost.feeling}\n            withComponent={withComponent}\n          />\n        )}\n        <CommentReactionCount>{reactionSummary.forText}</CommentReactionCount>\n      </CommentReactionSummaryWrapper>\n      <StyledTooltip\n        id={tooltipId}\n        effect=\"solid\"\n        html\n        bg={cssConst.tooltipBackgroundBlack}\n      />\n    </Container>\n  )\n}\n\nCommentReactionSummary.propTypes = {\n  commentId: PropTypes.string,\n  reactionIds: PropTypes.arrayOf(PropTypes.string),\n  reactions: PropTypes.shape({\n    id: PropTypes.string,\n    user: PropTypes.shape({\n      id: PropTypes.string,\n      profileName: PropTypes.string,\n      profileLink: PropTypes.string,\n      profileImg: PropTypes.string\n    }),\n    feeling: PropTypes.string,\n    targetId: PropTypes.string\n  })\n}\n\nCommentReactionSummary.defaultProps = {\n  commentId: 'commentId',\n  reactionIds: [],\n  reactions: {}\n}\n\nexport default CommentReactionSummary\n","import { useState, useEffect } from 'react'\n\nexport default compId => {\n  const [isNarrowComp, setIsNarrowComp] = useState(false)\n  // Similar to componentDidMount and componentDidUpdate\n  useEffect(() => {\n    const targetComp = document.getElementById(compId)\n    if (targetComp && targetComp.clientWidth < 140) {\n      setIsNarrowComp(true)\n    }\n  }, [compId]) // Only re-run the effect if compId changes\n  return isNarrowComp\n}\n","import { connect } from 'react-redux'\nimport {\n  getCommentReactionIds,\n  getCommentReactions\n} from '../reducers/selector'\nimport CommentReactionSummary from '../components/CommentReactionSummary'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    commentId: ownProps.commentId,\n    reactionIds: getCommentReactionIds(state),\n    reactions: getCommentReactions(state)\n  }\n}\n\nexport default connect(mapStateToProps)(CommentReactionSummary)\n","import cssesc from 'cssesc'\nimport commentMenu from '../assets/img/comment-menu.png'\nimport commentMenu2 from '../assets/img/comment-menu-2.png'\n\nexport const menuItemHideComment = `\n  &:before {\n    background-image: url(${cssesc(commentMenu)});\n    background-repeat: no-repeat;\n    background-size: 17px 34px;\n    background-position: 0 0;\n    content: '';\n    display: inline-block;\n    height: 16px;\n    margin-right: 5px;\n    width: 16px;\n  }\n`\n\nexport const menuItemEditComment = `\n  &:before {\n    background-image: url(${cssesc(commentMenu2)});\n    background-repeat: no-repeat;\n    background-size: 49px 262px;\n    background-position: 0 -228px;\n    content: '';\n    display: inline-block;\n    height: 16px;\n    margin-right: 5px;\n    width: 16px;\n  }\n`\n\nexport const menuItemDeleteComment = `\n  &:before {\n    background-image: url(${cssesc(commentMenu)});\n    background-repeat: no-repeat;\n    background-size: 17px 34px;\n    background-position: 0 -17px;\n    content: '';\n    display: inline-block;\n    height: 16px;\n    margin-right: 5px;\n    width: 16px;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { displayFlex, alignYAxisCenter } from '../styles/page'\nimport cssConst from '../styles/constants'\n\nconst MenuItemButtonWrapper = styled.div`\n  ${displayFlex}\n  ${alignYAxisCenter}\n  ${props => props.btnIcon}\n  border: solid ${cssConst.toggleMenuItemBorderColor};\n  border-width: 1px 0;\n  color: ${cssConst.toggleMenuItemTextColor};\n  &:hover {\n    background-color: ${cssConst.toggleMenuItemHoverBackground};\n    border-color: ${cssConst.toggleMenuItemBorderHoverColor};\n    color: ${cssConst.toggleMenuItemTextHoverColor};\n  }\n  outline: none;\n  text-decoration: none;\n  padding: 0 12px;\n  max-width: 300px;\n  cursor: pointer;\n`\n\nconst MenuItemButton = styled.span`\n  font-size: 13px;\n  -webkit-font-smoothing: antialiased;\n  font-weight: normal;\n  line-height: 22px;\n`\n\nconst MenuButton = ({ btnIcon, btnText, onClick }) => {\n  return (\n    <MenuItemButtonWrapper btnIcon={btnIcon} onClick={onClick}>\n      <MenuItemButton>{btnText}</MenuItemButton>\n    </MenuItemButtonWrapper>\n  )\n}\n\nMenuButton.propTypes = {\n  btnIcon: PropTypes.string,\n  btnText: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nMenuButton.defaultProps = {\n  btnIcon: '',\n  btnText: '選單按鈕',\n  onClick: () => {\n    console.log('clicked!')\n  }\n}\n\nexport default MenuButton\n","import { connect } from 'react-redux'\nimport { toggleCommentVisibility } from '../actions'\nimport MenuButton from '../components/MenuButton'\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(toggleCommentVisibility(ownProps.commentId))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MenuButton)\n","import { connect } from 'react-redux'\nimport { undoComment } from '../actions'\nimport MenuButton from '../components/MenuButton'\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(undoComment(ownProps.commentId))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MenuButton)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {\n  menuItemHideComment,\n  menuItemDeleteComment,\n  menuItemEditComment\n} from '../styles/menu'\nimport menu from '../assets/img/menu-new.png'\nimport MenuButton from './MenuButton'\nimport HideComment from '../containers/HideComment'\nimport DeleteComment from '../containers/DeleteComment'\nimport { useContextState } from '../containers/StateProvider'\n\nconst CommentMenuWrapper = styled.div`\n  position: absolute;\n  right: -14px;\n  z-index: 5;\n`\n\nconst CommentMenuWrapperTriangle = styled.i`\n  position: absolute;\n  background-image: url(${menu});\n  background-repeat: no-repeat;\n  background-size: 500px 296px;\n  background-position: -400px -245px;\n  height: 8px;\n  top: 2px;\n  width: 16px;\n  left: 100%;\n  margin-left: -28px;\n  overflow: hidden;\n`\n\nconst MenuWrapper = styled.div`\n  padding-top: 10px;\n  margin: -1px 0 30px;\n  font-size: 13px;\n`\n\nconst MenuPanel = styled.div`\n  border-radius: 3px;\n  background-clip: padding-box;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 3px;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);\n`\n\nconst Menu = styled.ul`\n  padding: 5px 0;\n  margin: 0;\n  list-style-type: disc;\n`\n\nconst MenuItem = styled.li`\n  list-style-type: none;\n  overflow: hidden;\n  white-space: nowrap;\n  display: list-item;\n  text-align: -webkit-match-parent;\n`\n\nconst CommentMenu = ({ commentId, isHidden, isYour, onClick }) => {\n  const { toggleEditMode } = useContextState()\n  return (\n    <CommentMenuWrapper>\n      <MenuWrapper>\n        <MenuPanel>\n          <Menu>\n            {isYour && (\n              <MenuItem>\n                <MenuButton\n                  btnIcon={menuItemEditComment}\n                  btnText=\"編輯......\"\n                  onClick={toggleEditMode}\n                />\n                <DeleteComment\n                  commentId={commentId}\n                  btnIcon={menuItemDeleteComment}\n                  btnText=\"刪除......\"\n                  onClick={onClick}\n                />\n              </MenuItem>\n            )}\n            {!isYour && !isHidden && (\n              <MenuItem>\n                <HideComment\n                  commentId={commentId}\n                  btnIcon={menuItemHideComment}\n                  btnText=\"隱藏留言\"\n                  onClick={onClick}\n                />\n              </MenuItem>\n            )}\n            {!isYour && (\n              <MenuItem>\n                <MenuButton btnText=\"尋求支援或檢舉留言\" />\n              </MenuItem>\n            )}\n          </Menu>\n        </MenuPanel>\n      </MenuWrapper>\n      <CommentMenuWrapperTriangle />\n    </CommentMenuWrapper>\n  )\n}\n\nCommentMenu.propTypes = {\n  commentId: PropTypes.string,\n  isHidden: PropTypes.bool,\n  isYour: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nCommentMenu.defaultProps = {\n  commentId: 'fakecommentid',\n  isHidden: false,\n  isYour: false,\n  onClick: () => {}\n}\n\nexport default CommentMenu\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport menuToggle from '../assets/img/fb-emojis-new.png'\nimport cssConst from '../styles/constants'\nimport { displayInlineBlock } from '../styles/page'\nimport useCompVisible from '../hooks/useCompVisible'\nimport CommentMenu from './CommentMenu'\nimport StyledTooltip from './StyledTooltip'\n\nconst MenuToggleWrapper = styled.div`\n  ${displayInlineBlock}\n  position: absolute;\n  vertical-align: middle;\n  width: 22px;\n  line-height: 16px;\n  padding: 8px 12px;\n`\n\nconst MenuToggle = styled.div`\n  vertical-align: middle;\n  background-image: url(${menuToggle});\n  background-repeat: no-repeat;\n  background-size: 97px 1200px;\n  background-position: -83px -1120px;\n  width: 12px;\n  height: 12px;\n  cursor: pointer;\n  &:hover {\n    background-position: -83px -1094px;\n  }\n  &:active {\n    background-position: -83px -1107px;\n  }\n`\n\nconst tooltipId = 'tip-for-comment-menu-toggle'\n\nconst CommentMenuToggle = ({ commentId, isHover, isHidden, isYour }) => {\n  const { ref, isCompVisible } = useCompVisible(false)\n  const toggleOrHover = isHover || isCompVisible\n  const tipText = isYour ? '編輯或刪除' : '隱藏或檢舉這篇留言'\n  return toggleOrHover ? (\n    <MenuToggleWrapper>\n      <MenuToggle ref={ref} data-for={tooltipId} data-tip={tipText} />\n      <StyledTooltip\n        id={tooltipId}\n        effect=\"solid\"\n        bg={cssConst.tooltipBackgroundBlack}\n      />\n      {isCompVisible && (\n        <CommentMenu\n          commentId={commentId}\n          isHidden={isHidden}\n          isYour={isYour}\n        />\n      )}\n    </MenuToggleWrapper>\n  ) : null\n}\n\nCommentMenuToggle.propTypes = {\n  commentId: PropTypes.string,\n  isHover: PropTypes.bool,\n  isHidden: PropTypes.bool,\n  isYour: PropTypes.bool\n}\n\nCommentMenuToggle.defaultProps = {\n  commentId: 'fakecommentid',\n  isHover: true,\n  isHidden: false,\n  isYour: false\n}\n\nexport default CommentMenuToggle\n","import { useState, useEffect, useRef } from 'react'\n\nexport default initialIsVisible => {\n  const [isCompVisible, setIsCompVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n  const handleHideComp = event => {\n    if (event.key === 'Escape') {\n      setIsCompVisible(false)\n    }\n  }\n\n  const handleClick = event => {\n    if (ref.current) {\n      const insideTarget = ref.current.contains(event.target)\n      setIsCompVisible(insideTarget)\n    }\n  }\n\n  // Don't forget to set useCapture = false,\n  // or pass as a object: { capture: boolean, once: boolean, passive: boolean }\n  // otherwise click from other elements\n  // with click listeners will not work as expected\n  // So here I call: target.addEventListener(type, listener[, useCapture]);\n  // ref: https://developer.mozilla.org/zh-TW/docs/Web/API/EventTarget/addEventListener\n  // And also remember to pass an empty array as second argument,\n  // so EventListener will only add and remove upon didMount and didUnmount.\n  useEffect(() => {\n    document.addEventListener('keydown', handleHideComp, false)\n    document.addEventListener('click', handleClick, false)\n    return () => {\n      document.removeEventListener('keydown', handleHideComp, false)\n      document.removeEventListener('click', handleClick, false)\n    }\n  }, [])\n\n  return { ref, isCompVisible, setIsCompVisible }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport uuidv1 from 'uuid/v1'\nimport styled from 'styled-components'\nimport {\n  displayBlock,\n  displayInlineBlock,\n  displayInlineFlex\n} from '../styles/page'\nimport CommentPlaceholder from './CommentPlaceholder'\nimport DisplayCommentReactSummary from '../containers/DisplayCommentReactSummary'\nimport CommentMenuToggle from './CommentMenuToggle'\n\nconst Container = styled.div`\n  ${displayBlock}\n  vertical-align: middle;\n`\n\nconst CommentWithReactionSummaryWrapper = styled.div`\n  ${props => (props.contentSeparated ? displayInlineBlock : displayInlineFlex)}\n  ${({ isHidden }) => isHidden && 'opacity: 0.5;'}\n  line-height: 16px;\n  position: relative;\n  max-width: 100%;\n`\n\nconst getSeparateContent = saying => {\n  const spaceRegex = /\\s{2,}/g\n  const breaker = '<breaker>'\n  const breakedContent = saying.replace(spaceRegex, breaker).split(breaker)\n  return breakedContent.map(content => {\n    const isHashTag = content.startsWith('#')\n    return { id: uuidv1(), content, attachMedia: '', isHashTag }\n  })\n}\n\nconst CommentWithReactionSummary = ({\n  commentId,\n  profileName,\n  profileLink,\n  isVerified,\n  saying,\n  attachMedia,\n  isHidden,\n  isHover,\n  isYour\n}) => {\n  const separatedContent = getSeparateContent(saying)\n  if (attachMedia !== '') {\n    separatedContent.push({\n      id: uuidv1(),\n      content: '',\n      attachMedia,\n      isHashTag: false\n    })\n  }\n  const contentSeparated = separatedContent.length > 1\n  return (\n    <Container>\n      <CommentWithReactionSummaryWrapper\n        isHidden={isHidden}\n        contentSeparated={contentSeparated}\n      >\n        <CommentPlaceholder\n          commentId={commentId}\n          profileName={profileName}\n          profileLink={profileLink}\n          isVerified={isVerified}\n          separatedContent={separatedContent}\n        />\n        <DisplayCommentReactSummary commentId={commentId} />\n      </CommentWithReactionSummaryWrapper>\n      <CommentMenuToggle\n        commentId={commentId}\n        isHover={isHover}\n        isHidden={isHidden}\n        isYour={isYour}\n      />\n    </Container>\n  )\n}\n\nCommentWithReactionSummary.propTypes = {\n  commentId: PropTypes.string,\n  profileName: PropTypes.string,\n  profileLink: PropTypes.string,\n  isVerified: PropTypes.bool,\n  saying: PropTypes.string,\n  attachMedia: PropTypes.string,\n  isHidden: PropTypes.bool,\n  isHover: PropTypes.bool,\n  isYour: PropTypes.bool\n}\n\nCommentWithReactionSummary.defaultProps = {\n  commentId: 'commentId',\n  profileName: '台灣工具伯 汪進坪',\n  profileLink: 'https://www.facebook.com/jingping.tw/',\n  isVerified: true,\n  saying: '這個我想，要查證比較難啦',\n  attachMedia: '',\n  isHidden: false,\n  isHover: false,\n  isYour: false\n}\n\nexport default CommentWithReactionSummary\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { displayInlineBlock } from '../styles/page'\nimport CommentWithReactionSummary from './CommentWithReactionSummary'\n\nconst Container = styled.div`\n  ${displayInlineBlock}\n  vertical-align: middle;\n  max-width: calc(100% - 22px);\n  word-wrap: break-word;\n`\n\nconst Comment = ({\n  commentId,\n  profileName,\n  profileLink,\n  isHidden,\n  isVerified,\n  saying,\n  attachMedia,\n  isHover,\n  isYour\n}) => {\n  return (\n    <Container id={commentId}>\n      <CommentWithReactionSummary\n        commentId={commentId}\n        profileName={profileName}\n        profileLink={profileLink}\n        isVerified={isVerified}\n        saying={saying}\n        attachMedia={attachMedia}\n        isHidden={isHidden}\n        isHover={isHover}\n        isYour={isYour}\n      />\n    </Container>\n  )\n}\n\nComment.propTypes = {\n  commentId: PropTypes.string,\n  profileName: PropTypes.string,\n  profileLink: PropTypes.string,\n  isVerified: PropTypes.bool,\n  isHidden: PropTypes.bool,\n  saying: PropTypes.string,\n  attachMedia: PropTypes.string,\n  isHover: PropTypes.bool,\n  isYour: PropTypes.bool\n}\n\nComment.defaultProps = {\n  commentId: 'fakecommentid',\n  saying: '這個我想，要查證比較難啦',\n  profileName: '台灣工具伯 汪進坪',\n  profileLink: 'https://www.facebook.com/jingping.tw/',\n  isVerified: true,\n  isHidden: false,\n  attachMedia: '',\n  isHover: false,\n  isYour: false\n}\n\nexport default Comment\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\n\nconst CommentFeedbackButtonWrapper = styled.div`\n  color: ${props => props.color};\n  cursor: pointer;\n  margin-right: 2px;\n`\n\nconst CommentFeedbackButton = ({ displayText, reacted, onClick }) => {\n  const color = reacted\n    ? cssConst.reactedButtonTextColor\n    : cssConst.commentFeedbackButtonTextColor\n  return (\n    <CommentFeedbackButtonWrapper onClick={onClick} color={color}>\n      <span>{displayText}</span>\n    </CommentFeedbackButtonWrapper>\n  )\n}\n\nCommentFeedbackButton.defaultProps = {\n  displayText: '讚',\n  reacted: false\n}\n\nCommentFeedbackButton.propTypes = {\n  displayText: PropTypes.string,\n  reacted: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n}\n\nCommentFeedbackButton.displayName = 'CommentFeedbackButton'\n\nexport default CommentFeedbackButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  feedbackReactToComment,\n  undoReactToComment,\n  REACTIONS\n} from '../actions'\nimport { isReactedToComment } from '../reducers/selector'\nimport appConst from '../utils/constants'\nimport CommentFeedbackButton from '../components/CommentFeedbackButton'\n\nconst FeedbackActionReactToComment = ({\n  reactId,\n  reacted,\n  doReactAction,\n  undoReactAction\n}) => {\n  const toggleReactAction = () => {\n    if (reacted) {\n      undoReactAction(reactId)\n    } else {\n      doReactAction(reactId)\n    }\n  }\n  return <CommentFeedbackButton reacted={reacted} onClick={toggleReactAction} />\n}\n\nFeedbackActionReactToComment.propTypes = {\n  reactId: PropTypes.string.isRequired,\n  reacted: PropTypes.bool.isRequired,\n  doReactAction: PropTypes.func.isRequired,\n  undoReactAction: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log('state', state)\n  // console.log('ownProps', ownProps)\n  // Pass reacted by props if a fake react id detected,\n  // otherwise pass by redux.\n  // A fake react id are used for testing or storybook.\n  const hasFakeReactId = ownProps.reactId === appConst.fakeReactId\n  const passByPropsOrRedux = hasFakeReactId\n    ? ownProps.reacted\n    : isReactedToComment(state, ownProps.reactId)\n  return {\n    reactId: ownProps.reactId,\n    reacted: passByPropsOrRedux\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  doReactAction: reactId => {\n    const actionData = {\n      entities: {\n        id: reactId,\n        user: ownProps.you,\n        feeling: REACTIONS.LIKE,\n        targetId: ownProps.targetId\n      }\n    }\n    return dispatch(feedbackReactToComment(actionData))\n  },\n  undoReactAction: reactId => dispatch(undoReactToComment(reactId))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FeedbackActionReactToComment)\n","import { connect } from 'react-redux'\nimport { toggleCommentVisibility } from '../actions'\nimport CommentFeedbackButton from '../components/CommentFeedbackButton'\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(toggleCommentVisibility(ownProps.commentId))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CommentFeedbackButton)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport { displayFlex, DotSeparator } from '../styles/page'\nimport FeedbackActionReactToComment from '../containers/FeedbackActionReactToComment'\nimport CommentFeedbackButton from './CommentFeedbackButton'\nimport appConst from '../utils/constants'\nimport ShowComment from '../containers/ShowComment'\nimport { useContextState } from '../containers/StateProvider'\n\nconst CommentFeedbackWrapper = styled.div`\n  ${displayFlex}\n  color: ${cssConst.commentFeedbackTextColor};\n  ${({ isHidden }) => isHidden && 'opacity: 0.5;'}\n  font-size: 13px;\n  line-height: 13px;\n  margin-top: 5px;\n  margin-left: 50px;\n`\n\nconst onClick = () => {}\nconst { you } = appConst\n\nconst getActionButton = (isHidden, targetId, reactId, reacted) => {\n  return isHidden ? (\n    <ShowComment displayText=\"取消隱藏\" commentId={targetId} />\n  ) : (\n    <FeedbackActionReactToComment\n      you={you}\n      targetId={targetId}\n      reactId={reactId}\n      reacted={reacted}\n    />\n  )\n}\n\nconst CommentFeedback = ({\n  time,\n  targetId,\n  reactId,\n  reacted,\n  isHidden,\n  inEditMode\n}) => {\n  const { toggleEditMode } = useContextState()\n  return (\n    <CommentFeedbackWrapper isHidden={isHidden}>\n      {inEditMode ? (\n        <>\n          <span>按Esc鍵可</span>\n          <CommentFeedbackButton onClick={toggleEditMode} displayText=\"取消\" />\n          <span>。</span>\n        </>\n      ) : (\n        <>\n          {getActionButton(isHidden, targetId, reactId, reacted)}\n          <DotSeparator />\n          <CommentFeedbackButton displayText=\"回覆\" onClick={onClick} />\n          <DotSeparator />\n          <span>{time}</span>\n        </>\n      )}\n    </CommentFeedbackWrapper>\n  )\n}\n\nCommentFeedback.defaultProps = {\n  time: '1天',\n  targetId: '',\n  reactId: '',\n  reacted: false,\n  isHidden: false,\n  inEditMode: false\n}\n\nCommentFeedback.propTypes = {\n  time: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  targetId: PropTypes.string,\n  reactId: PropTypes.string,\n  reacted: PropTypes.bool,\n  isHidden: PropTypes.bool,\n  inEditMode: PropTypes.bool\n}\n\nCommentFeedback.displayName = 'CommentFeedback'\n\nexport default CommentFeedback\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport useMouseHover from '../hooks/useMouseHover'\nimport appConst from '../utils/constants'\nimport { yourCommentBorderStyle } from '../styles/post'\nimport { useContextState } from '../containers/StateProvider'\nimport CommentAvatar from './CommentAvatar'\nimport Comment from './Comment'\nimport MyComment from './MyComment'\nimport CommentFeedback from './CommentFeedback'\n\nconst CommentAndFeedbackWrapper = styled.div`\n  position: relative;\n  padding: 4px 12px 8px 12px;\n  ${({ isYour }) => isYour && yourCommentBorderStyle}\n`\n\nconst CommentWithFeedback = ({ comment }) => {\n  const { inEditMode, toggleEditMode } = useContextState()\n  const [isHover, setIsHover] = useMouseHover()\n  const onEnter = () => {\n    setIsHover(true)\n  }\n  const onLeave = () => {\n    setIsHover(false)\n  }\n  const {\n    id,\n    reactId,\n    user: { profileName, profileLink, profileImg, isVerified },\n    isHidden,\n    saying,\n    attachMedia,\n    time\n  } = comment\n  const {\n    you: { profileName: yourProfileName }\n  } = appConst\n  const isYour = yourProfileName === profileName\n  const isFakeUser = profileName.startsWith('假帳號')\n  if (isFakeUser) {\n    return null\n  }\n  return inEditMode ? (\n    <>\n      <MyComment\n        inEditMode={inEditMode}\n        toggleEditMode={toggleEditMode}\n        commentId={id}\n        saying={saying}\n      />\n      <CommentFeedback inEditMode={inEditMode} />\n    </>\n  ) : (\n    <CommentAndFeedbackWrapper\n      key={id}\n      isYour={isYour}\n      onMouseEnter={onEnter}\n      onMouseLeave={onLeave}\n    >\n      <CommentAvatar\n        profileName={profileName}\n        profileImg={profileImg}\n        isHidden={isHidden}\n      />\n      <Comment\n        commentId={id}\n        profileName={profileName}\n        profileLink={profileLink}\n        profileImg={profileImg}\n        isVerified={isVerified}\n        saying={saying}\n        attachMedia={attachMedia}\n        isHidden={isHidden}\n        isHover={isHover}\n        isYour={isYour}\n      />\n      <CommentFeedback\n        time={time}\n        targetId={id}\n        reactId={reactId}\n        isHidden={isHidden}\n      />\n    </CommentAndFeedbackWrapper>\n  )\n}\n\nCommentWithFeedback.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.string,\n    reactId: PropTypes.string,\n    user: PropTypes.shape({\n      profileName: PropTypes.string,\n      profileLink: PropTypes.string,\n      profileImg: PropTypes.string,\n      isVerified: PropTypes.bool\n    }),\n    isHidden: PropTypes.bool,\n    saying: PropTypes.string,\n    attachMedia: PropTypes.string,\n    time: PropTypes.string\n  })\n}\n\nCommentWithFeedback.defaultProps = {\n  comment: {\n    id: 'fakecommentid',\n    reactId: 'POST',\n    user: {\n      profileName: '台灣工具伯 汪進坪',\n      profileLink: 'https://www.facebook.com/jingping.tw/',\n      profileImg: 'toolman.png',\n      isVerified: true\n    },\n    isHidden: false,\n    saying: '這個我想，要查證比較難啦',\n    attachMedia: '',\n    time: '1天'\n  }\n}\n\nexport default CommentWithFeedback\n","import { useState } from 'react'\n\nexport default () => {\n  const [isHover, setIsHover] = useState(false)\n  return [isHover, setIsHover]\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getComment } from '../reducers/selector'\nimport { StateProvider } from './StateProvider'\nimport CommentWithFeedback from '../components/CommentWithFeedback'\n\nconst WithContext = ({ comment }) => {\n  const [inEditMode, setEditMode] = useState(false)\n  const toggleEditMode = () => setEditMode(!inEditMode)\n  return (\n    <StateProvider initialState={{ inEditMode, toggleEditMode }}>\n      <CommentWithFeedback comment={comment} />\n    </StateProvider>\n  )\n}\n\nWithContext.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.string,\n    reactId: PropTypes.string,\n    user: PropTypes.shape({\n      profileName: PropTypes.string,\n      profileLink: PropTypes.string,\n      profileImg: PropTypes.string,\n      isVerified: PropTypes.bool\n    }),\n    isHidden: PropTypes.bool,\n    saying: PropTypes.string,\n    attachMedia: PropTypes.string,\n    time: PropTypes.string\n  }).isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comment: getComment(state, ownProps.commentId)\n  }\n}\n\nexport default connect(mapStateToProps)(WithContext)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport cssConst from '../styles/constants'\nimport RelevantCommentToggle from './RelevantCommentToggle'\nimport MyComment from './MyComment'\nimport DisplayComment from '../containers/DisplayComment'\n\nconst CommentSectionWrapper = styled.div`\n  border-top: ${cssConst.postSectionBorder};\n`\n\nconst CommentSection = ({ commentIds }) => {\n  return (\n    <CommentSectionWrapper>\n      <RelevantCommentToggle />\n      <MyComment />\n      {commentIds.map(commentId => (\n        <DisplayComment key={commentId} commentId={commentId} />\n      ))}\n    </CommentSectionWrapper>\n  )\n}\n\nCommentSection.propTypes = {\n  commentIds: PropTypes.arrayOf(PropTypes.string)\n}\n\nCommentSection.defaultProps = {\n  commentIds: []\n}\n\nexport default CommentSection\n","import { connect } from 'react-redux'\nimport { getCommentIds } from '../reducers/selector'\nimport CommentSection from '../components/CommentSection'\n\nconst mapStateToProps = state => {\n  return {\n    commentIds: getCommentIds(state)\n  }\n}\n\nexport default connect(mapStateToProps)(CommentSection)\n"],"sourceRoot":""}