{"version":3,"sources":["actions/index.js","registerServiceWorker.js","reducers/react.js","reducers/commentReact.js","reducers/comment.js","reducers/share.js","reducers/index.js","configureStore.js","index.js","utils/dataMock.js","worker.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_DATA","FEEDBACK","REACTIONS","feedbackReact","undoReact","feedbackReactToComment","undoReactToComment","feedbackComment","undoComment","updateComment","toggleCommentVisibility","REACT","UNDO_REACT","COMMENT_REACT","UNDO_COMMENT_REACT","COMMENT","UNDO_COMMENT","UPDATE_COMMENT","COMMENT_VISIBILITY_TOGGLE","SHARE","TARGET","LIKE","HAHA","LOVE","WOW","SAD","ANGRY","_ref2","entities","type","payload","id","_ref3","_ref4","_ref5","saying","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reactsById","produce","draft","action","reacts","Object","keys","forEach","addReactByNormalizr","addReact","removeReact","reactReducer","combineReducers","byId","allIds","arguments","length","undefined","concat","toConsumableArray","addReactIdByNormalizr","addReactId","filter","reactId","removeReactId","commentReacts","commentReactReducer","commentsById","comments","addCommentByNormalizr","addComment","removeComment","_action$payload","currentVisibility","isHidden","commentReducer","addCommentIdByNormalizr","addCommentId","removeCommentId","sharesById","shares","addShareByNormalizr","shareReducer","addShareIdByNormalizr","rootReducer","configureStore","preloadedState","createStore","store","post","user","definedUsers","theMazu","time","content","title","worker","Worker","postMessage","onmessage","event","dispatch","data","App","React","lazy","Promise","all","e","bind","ReactDOM","render","react_default","a","createElement","es","react","fallback","postData","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getFakeUser","uuid_v1__WEBPACK_IMPORTED_MODULE_0__","uuid_v1__WEBPACK_IMPORTED_MODULE_0___default","n","goldXFive","uuidv1","profileName","profileLink","profileImg","isVerified","terryGoodTiming","dingDing","toolMan","english","koreanFish","careWheelEveryday","universityFoundField","sparkJoy","nameId","userImg","module","exports","__webpack_public_path__"],"mappings":"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","file":"static/js/main.936b93bf.chunk.js","sourcesContent":["export const ADD_DATA = 'ADD_DATA'\n\nexport const addData = ({ entities }) => ({\n  type: ADD_DATA,\n  payload: entities\n})\n\nexport const FEEDBACK = {\n  REACT: 'REACT',\n  UNDO_REACT: 'UNDO_REACT',\n  COMMENT_REACT: 'COMMENT_REACT',\n  UNDO_COMMENT_REACT: 'UNDO_COMMENT_REACT',\n  COMMENT: 'COMMENT',\n  UNDO_COMMENT: 'UNDO_COMMENT',\n  UPDATE_COMMENT: 'UPDATE_COMMENT',\n  COMMENT_VISIBILITY_TOGGLE: 'COMMECOMMENT_VISIBILITY_TOGGLENT_HIDE',\n  SHARE: 'SHARE',\n  TARGET: 'POST'\n}\n\nexport const REACTIONS = {\n  LIKE: 'LIKE',\n  HAHA: 'HAHA',\n  LOVE: 'LOVE',\n  WOW: 'WOW',\n  SAD: 'SAD',\n  ANGRY: 'ANGRY'\n}\n\nexport const feedbackReact = ({ entities }) => ({\n  type: FEEDBACK.REACT,\n  payload: entities\n})\n\nexport const undoReact = id => ({\n  type: FEEDBACK.UNDO_REACT,\n  payload: {\n    id\n  }\n})\n\nexport const feedbackReactToComment = ({ entities }) => ({\n  type: FEEDBACK.COMMENT_REACT,\n  payload: entities\n})\n\nexport const undoReactToComment = id => ({\n  type: FEEDBACK.UNDO_COMMENT_REACT,\n  payload: {\n    id\n  }\n})\n\nexport const feedbackComment = ({ entities }) => ({\n  type: FEEDBACK.COMMENT,\n  payload: entities\n})\n\nexport const undoComment = id => ({\n  type: FEEDBACK.UNDO_COMMENT,\n  payload: {\n    id\n  }\n})\n\nexport const updateComment = ({ id, saying }) => ({\n  type: FEEDBACK.UPDATE_COMMENT,\n  payload: {\n    id,\n    saying\n  }\n})\n\nexport const toggleCommentVisibility = id => ({\n  type: FEEDBACK.COMMENT_VISIBILITY_TOGGLE,\n  payload: {\n    id\n  }\n})\n\nexport const feedbackShare = ({ entities }) => ({\n  type: FEEDBACK.SHARE,\n  payload: entities\n})\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { ADD_DATA, FEEDBACK } from '../actions'\n\nconst addReactByNormalizr = (draft, action) => {\n  const {\n    payload: { reacts }\n  } = action\n  Object.keys(reacts).forEach(id => {\n    draft[id] = reacts[id]\n  })\n}\n\nconst addReact = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeReact = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst reactsById = produce((draft, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      addReactByNormalizr(draft, action)\n      break\n    case FEEDBACK.REACT:\n      addReact(draft, action)\n      break\n    case FEEDBACK.UNDO_REACT:\n      removeReact(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addReactIdByNormalizr = (state, action) => {\n  const {\n    payload: { reacts }\n  } = action\n  // Extract object and append all its react's ID to the list of allIds\n  return [...Object.keys(reacts), ...state]\n}\n\nconst addReactId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just append the new react's ID to the list of allIds\n  return [id, ...state]\n}\n\nconst removeReactId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just remove the react's ID from the list of allIds\n  return state.filter(reactId => reactId !== id)\n}\n\nconst allReact = (state = [], action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return addReactIdByNormalizr(state, action)\n    case FEEDBACK.REACT:\n      return addReactId(state, action)\n    case FEEDBACK.UNDO_REACT:\n      return removeReactId(state, action)\n    default:\n      return state\n  }\n}\n\nconst reactReducer = combineReducers({\n  byId: reactsById,\n  allIds: allReact\n})\n\nexport default reactReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { ADD_DATA, FEEDBACK } from '../actions'\n\nconst addReactByNormalizr = (draft, action) => {\n  const {\n    payload: { commentReacts }\n  } = action\n  Object.keys(commentReacts).forEach(id => {\n    draft[id] = commentReacts[id]\n  })\n}\n\nconst addReact = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeReact = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst reactsById = produce((draft, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      addReactByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT_REACT:\n      addReact(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT_REACT:\n      removeReact(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addReactIdByNormalizr = (state, action) => {\n  const {\n    payload: { commentReacts }\n  } = action\n  // Extract object and append all its react's ID to the list of allIds\n  return [...Object.keys(commentReacts), ...state]\n}\n\nconst addReactId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just append the new react's ID to the list of allIds\n  return [id, ...state]\n}\n\nconst removeReactId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just remove the react's ID from the list of allIds\n  return state.filter(reactId => reactId !== id)\n}\n\nconst allReact = (state = [], action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return addReactIdByNormalizr(state, action)\n    case FEEDBACK.COMMENT_REACT:\n      return addReactId(state, action)\n    case FEEDBACK.UNDO_COMMENT_REACT:\n      return removeReactId(state, action)\n    default:\n      return state\n  }\n}\n\nconst commentReactReducer = combineReducers({\n  byId: reactsById,\n  allIds: allReact\n})\n\nexport default commentReactReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { ADD_DATA, FEEDBACK } from '../actions'\n\nconst addCommentByNormalizr = (draft, action) => {\n  const {\n    payload: { comments }\n  } = action\n  Object.keys(comments).forEach(id => {\n    draft[id] = comments[id]\n  })\n}\n\nconst addComment = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeComment = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst updateComment = (draft, action) => {\n  const {\n    payload: { id, saying }\n  } = action\n  draft[id].saying = saying\n}\n\nconst toggleCommentVisibility = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  const currentVisibility = draft[id].isHidden\n  draft[id].isHidden = !currentVisibility\n}\n\nconst commentsById = produce((draft, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      addCommentByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT:\n      addComment(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT:\n      removeComment(draft, action)\n      break\n    case FEEDBACK.UPDATE_COMMENT:\n      updateComment(draft, action)\n      break\n    case FEEDBACK.COMMENT_VISIBILITY_TOGGLE:\n      toggleCommentVisibility(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addCommentIdByNormalizr = (state, action) => {\n  const {\n    payload: { comments }\n  } = action\n  // Extract object and append all its comments's ID to the list of allIds\n  return [...Object.keys(comments), ...state]\n}\n\nconst addCommentId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just append the new comments's ID to the list of allIds\n  return [id, ...state]\n}\n\nconst removeCommentId = (state, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Just remove the comment's ID from the list of allIds\n  return state.filter(reactId => reactId !== id)\n}\n\nconst allComment = (state = [], action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return addCommentIdByNormalizr(state, action)\n    case FEEDBACK.COMMENT:\n      return addCommentId(state, action)\n    case FEEDBACK.UNDO_COMMENT:\n      return removeCommentId(state, action)\n    default:\n      return state\n  }\n}\n\nconst commentReducer = combineReducers({\n  byId: commentsById,\n  allIds: allComment\n})\n\nexport default commentReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { ADD_DATA, FEEDBACK } from '../actions'\n\nconst addShareByNormalizr = (draft, action) => {\n  const {\n    payload: { shares }\n  } = action\n  Object.keys(shares).forEach(id => {\n    draft[id] = shares[id]\n  })\n}\n\nconst sharesById = produce((draft, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n    case FEEDBACK.SHARE:\n      addShareByNormalizr(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addShareIdByNormalizr = (state, action) => {\n  const {\n    payload: { shares }\n  } = action\n  // Just append the new share's ID to the list of all IDs\n  return [...Object.keys(shares), ...state]\n}\n\nconst allShare = (state = [], action) => {\n  switch (action.type) {\n    case ADD_DATA:\n    case FEEDBACK.SHARE:\n      return addShareIdByNormalizr(state, action)\n    default:\n      return state\n  }\n}\n\nconst shareReducer = combineReducers({\n  byId: sharesById,\n  allIds: allShare\n})\n\nexport default shareReducer\n","import { combineReducers } from 'redux'\nimport reactReducer from './react'\nimport commentReactReducer from './commentReact'\nimport commentReducer from './comment'\nimport shareReducer from './share'\n\nconst rootReducer = combineReducers({\n  reactReducer,\n  commentReactReducer,\n  commentReducer,\n  shareReducer\n})\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst configureStore = preloadedState => {\n  return createStore(\n    rootReducer,\n    preloadedState\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n}\n\nexport default configureStore\n","/* eslint-disable global-require */\n// As of Babel 7.4.0, this package has been deprecated in favor of directly\n// including core-js/stable (to polyfill ECMAScript features)\n// and regenerator-runtime/runtime (needed to use transpiled generator functions):\n// import \"core-js/stable\";\n// import \"regenerator-runtime/runtime\";\n// ref: https://babeljs.io/docs/en/babel-polyfill\nimport 'core-js/stable/object/keys'\nimport 'core-js/stable/array/is-array'\nimport 'core-js/stable/array/for-each'\nimport 'core-js/stable/array/sort'\nimport 'core-js/stable/array/filter'\nimport 'core-js/stable/array/map'\nimport 'core-js/stable/array/reduce'\nimport 'core-js/stable/string/replace'\nimport 'core-js/stable/string/split'\nimport 'core-js/stable/string/includes'\nimport 'core-js/stable/string/starts-with'\nimport 'core-js/stable/number/to-fixed'\nimport 'core-js/stable/date/now'\nimport React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport registerServiceWorker from './registerServiceWorker'\nimport configureStore from './configureStore'\nimport { definedUsers } from './utils/dataMock'\nimport Worker from './worker'\n\nconst store = configureStore()\n\nconst post = {\n  id: 'POST',\n  user: definedUsers.theMazu,\n  time: 1555495920000,\n  // UNIX-timestamp in milli-sec for local time: 2019/04/17 18:12:00\n  content: '我根本沒說。',\n  title: 'I did not say that shit.'\n}\n\nconst worker = new Worker()\nworker.postMessage('init')\nconsole.log('Message posted to worker')\nworker.onmessage = event => {\n  console.log('Message received from worker')\n  store.dispatch(event.data)\n}\n\nconst App = React.lazy(() => import('./components/App'))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<div>Loading...</div>}>\n      <App postData={post} />\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n","import uuidv1 from 'uuid/v1'\nimport { REACTIONS, FEEDBACK } from '../actions'\n\nexport const definedUsers = {\n  goldXFive: {\n    id: uuidv1(),\n    profileName: '金乘五',\n    profileLink: 'https://www.facebook.com/takeshikaneshirofanspage/',\n    profileImg: 'goldxfive.png',\n    isVerified: false\n  },\n  theMazu: {\n    id: uuidv1(),\n    profileName: '媽祖',\n    profileLink: 'https://www.facebook.com/themazhou/',\n    profileImg: 'mazu.png',\n    isVerified: false\n  },\n  terryGoodTiming: {\n    id: uuidv1(),\n    profileName: '鍋苔冥',\n    profileLink: 'https://www.facebook.com/TerryGou1018/',\n    profileImg: 'terry.png',\n    isVerified: true\n  },\n  dingDing: {\n    id: uuidv1(),\n    profileName: '叮守鐘',\n    profileLink: 'https://www.youtube.com/watch?v=_97bLScvHWs',\n    profileImg: 'dingding.png',\n    isVerified: false\n  },\n  toolMan: {\n    id: uuidv1(),\n    profileName: '台灣工具伯 汪進坪',\n    profileLink: 'https://www.facebook.com/jingping.tw/',\n    profileImg: 'toolman.png',\n    isVerified: true\n  },\n  english: {\n    id: uuidv1(),\n    profileName: '菜應蚊',\n    profileLink: 'https://www.facebook.com/tsaiingwen/',\n    profileImg: 'english.png',\n    isVerified: true\n  },\n  koreanFish: {\n    id: uuidv1(),\n    profileName: '韓國魚',\n    profileLink: 'https://www.facebook.com/twherohan/',\n    profileImg: 'korean-fish.png',\n    isVerified: true\n  },\n  careWheelEveryday: {\n    id: uuidv1(),\n    profileName: '每天關心愛情摩天輪的興建狀況',\n    profileLink: 'https://www.facebook.com/CareLoveFerrisWheelEveryday/',\n    profileImg: 'wheel.png',\n    isVerified: false\n  },\n  universityFoundField: {\n    id: uuidv1(),\n    profileName: '找到田大學',\n    profileLink: '#',\n    profileImg: 'anonymous-university.png',\n    isVerified: false\n  },\n  sparkJoy: {\n    id: uuidv1(),\n    profileName: '尛理惠的整理魔法',\n    profileLink: '#',\n    profileImg: 'sparkJoy.jpg',\n    isVerified: true\n  }\n}\n\nconst definedReactors = [\n  definedUsers.terryGoodTiming,\n  definedUsers.koreanFish,\n  definedUsers.universityFoundField,\n  definedUsers.english,\n  definedUsers.toolMan,\n  definedUsers.dingDing\n]\n\n/**\n * Get user object for reactions with the following properties:\n *   @prop {id}\n *   @prop {profileName}\n *   @prop {profileLink}\n *   @prop {profileImg}\n * @param {nameId} nameId\n *  An id to distinguish from users,\n *  will append to @prop {profileName}.\n * @param {gender} gender\n *  Choose an img represent gender, `MALE` if ommited.\n */\nexport const getReactor = (nameId, gender = 'MALE') => {\n  const user = nameId < definedReactors.length ?\n    definedReactors[nameId] :\n    getFakeUser(nameId, gender)\n  return user\n}\n\n/**\n * Get fake user object with the following properties:\n *   @prop {id}\n *   @prop {profileName}\n *   @prop {profileLink}\n *   @prop {profileImg}\n * @param {nameId} nameId\n *  An id to distinguish from users,\n *  will append to @prop {profileName}.\n * @param {gender} gender\n *  Choose an img represent gender, `MALE` if ommited.\n */\nexport const getFakeUser = (nameId, gender = 'MALE') => {\n  const maleUserImg = 'anonymous-male.png'\n  const femaleUserImg = 'anonymous-female.png'\n  const userImg = gender === 'MALE' ? maleUserImg : femaleUserImg\n  return {\n    id: uuidv1(),\n    profileName: `假帳號${nameId}`,\n    profileLink: '#',\n    profileImg: userImg,\n    isVerified: false\n  }\n}\n\nconst createCommentReactions = (\n  commentId,\n  commentReacts,\n  commentReactsTotal = 200,\n  ratio = [3, 2, 1]\n) => {\n  if (typeof commentId !== 'string') {\n    throw new Error('Comment id must be string.')\n  }\n  if (ratio.length > 6 || ratio.length < 1) {\n    throw new Error('Ratio must be 1 to 6 numbers.')\n  }\n  if (ratio.filter(r => typeof r !== 'number').length > 0) {\n    throw new Error('Array of ratio must be type of number.')\n  }\n  // Calculate reations feeling distribution by ratio\n  // If commentReactsTotal < ratioTotal, ratio will be [1] for full of Likes\n  const ratioTotal = ratio.reduce((r, acc) => r + acc)\n  const ratioAvailable = commentReactsTotal >= ratioTotal\n  const divisorLike = ratioAvailable ? ratioTotal / ratio[0] : 1\n  const divisorHaha = ratioAvailable && ratio[1] ? ratioTotal / ratio[1] : 0\n  const divisorLove = ratioAvailable && ratio[2] ? ratioTotal / ratio[2] : 0\n  const divisorWow = ratioAvailable && ratio[3] ? ratioTotal / ratio[3] : 0\n  const divisorSad = ratioAvailable && ratio[4] ? ratioTotal / ratio[4] : 0\n  const divisorAnger = ratioAvailable && ratio[5] ? ratioTotal / ratio[5] : 0\n  const totalLikes =\n    divisorLike === 0 ? 0 : Math.ceil(commentReactsTotal / divisorLike)\n  const totalHahas =\n    divisorHaha === 0 ? 0 : Math.ceil(commentReactsTotal / divisorHaha)\n  const totalLoves =\n    divisorLove === 0 ? 0 : Math.ceil(commentReactsTotal / divisorLove)\n  const totalWows =\n    divisorWow === 0 ? 0 : Math.ceil(commentReactsTotal / divisorWow)\n  const totalSads =\n    divisorSad === 0 ? 0 : Math.ceil(commentReactsTotal / divisorSad)\n  const totalAngers =\n    divisorAnger === 0 ? 0 : Math.ceil(commentReactsTotal / divisorAnger)\n  for (let i = 0; i < commentReactsTotal; i++) {\n    if (i < totalLikes) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.LIKE,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.HAHA,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.LOVE,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves + totalWows) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.WOW,\n        targetId: commentId\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads\n    ) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.SAD,\n        targetId: commentId\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads + totalAngers\n    ) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.ANGRY,\n        targetId: commentId\n      })\n    }\n  }\n}\n\n/**\n * create fake reactions with default ratio of\n * 1/2 of Likes, 1/3 of Hahas and 1/6 of Loves\n * if @param {ratio} ratio was omitted.\n * @param {totalReactions} totalReactions\n *  How many comments to make.\n * @param {ratio} ratio\n *  How to distribute the ratio of reaction type,\n *  accept only an array of 1 to 6 numbers,\n *  and ignore the omitted numbers.\n *  eg. `[3,2,1]` will distribute the ratio for\n *  3/(3+2+1) of `Like`, 2/(3+2+1) of `Haha`,\n *  1/(3+2+1) of `Love` and empty ratio for the rest of types.\n *  eg2. `[1]` will distribute the ratio for full of `Like`.\n *  eg3. `[0,0,0,0,0,1]` will distribute the ratio for full of `Anger`.\n *  eg4. `[0,0,0,0,1]` will distribute the ratio for full of `Sad`.\n * @returns {reactObj}\n *  An object contains th following properties:\n *  @prop {reacts}\n *   An array of objects contains the following properties:\n *   @prop {name}\n *    The user's profile name\n *   @prop {feeling}\n *    The react's feeling: `Like`, `Haha`, `Love`,\n *    `Wow`, `Sad`, `Anger`\n *  @prop {commentIds}\n *   An array of @prop {commentId}, type is string.\n *   For @function createComments .\n */\nexport const createReactions = (totalReactions, ratio = [3, 2, 1]) => {\n  if (totalReactions < 1) {\n    throw new Error('Number of total reactions at least to be 1.')\n  }\n  if (ratio.length > 6 || ratio.length < 1) {\n    throw new Error('Ratio must be 1 to 6 numbers.')\n  }\n  if (ratio.filter(r => typeof r !== 'number').length > 0) {\n    throw new Error('Array of ratio must be type of number.')\n  }\n  // Calculate reations feeling distribution by ratio\n  // If totalReactions < ratioTotal, ratio will be [1] for full of Likes\n  const ratioTotal = ratio.reduce((r, acc) => r + acc)\n  const ratioAvailable = totalReactions >= ratioTotal\n  const divisorLike = ratioAvailable ? ratioTotal / ratio[0] : 1\n  const divisorHaha = ratioAvailable && ratio[1] ? ratioTotal / ratio[1] : 0\n  const divisorLove = ratioAvailable && ratio[2] ? ratioTotal / ratio[2] : 0\n  const divisorWow = ratioAvailable && ratio[3] ? ratioTotal / ratio[3] : 0\n  const divisorSad = ratioAvailable && ratio[4] ? ratioTotal / ratio[4] : 0\n  const divisorAnger = ratioAvailable && ratio[5] ? ratioTotal / ratio[5] : 0\n  const totalLikes =\n    divisorLike === 0 ? 0 : Math.ceil(totalReactions / divisorLike)\n  const totalHahas =\n    divisorHaha === 0 ? 0 : Math.ceil(totalReactions / divisorHaha)\n  const totalLoves =\n    divisorLove === 0 ? 0 : Math.ceil(totalReactions / divisorLove)\n  const totalWows =\n    divisorWow === 0 ? 0 : Math.ceil(totalReactions / divisorWow)\n  const totalSads =\n    divisorSad === 0 ? 0 : Math.ceil(totalReactions / divisorSad)\n  const totalAngers =\n    divisorAnger === 0 ? 0 : Math.ceil(totalReactions / divisorAnger)\n  // Add reactions as many as totalReactions\n  // And the first n reactions is pre-defined reactors\n  // (n = length of pre-defined reactors)\n  // Or (totalReactions + commentReactsTotal) reactions for comments\n  // if totalComments > 0\n  const reacts = []\n  for (let i = 0; i < totalReactions; i++) {\n    if (i < totalLikes) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.LIKE,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.HAHA,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.LOVE,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves + totalWows) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.WOW,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads\n    ) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.SAD,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads + totalAngers\n    ) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.ANGRY,\n        targetId: FEEDBACK.TARGET\n      })\n    }\n  }\n  return reacts\n}\n\n/**\n * create fake comments.\n * @param {commentIds} commentIds\n *  How many comments to make, based on output of\n *  @function createReactions .\n * @returns {comments}\n *  An array of objects contains the following properties:\n *  @prop {name}\n *    The user's profile name\n */\nexport const createComments = commentsTotal => {\n  const commentReacts = []\n  const comments = [\n    {\n      id: uuidv1(),\n      user: definedUsers.dingDing,\n      saying: '可以托夢讓我重選台北市長嗎？',\n      time: '4天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.toolMan,\n      saying: '這個我想，要查證比較難啦',\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.english,\n      saying: '我也這麼覺得',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.terryGoodTiming,\n      saying: '謝謝樓主托夢，三樓的民主不能當飯吃！',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.koreanFish,\n      saying: '樓上為什麼不考慮吃個包子呢？',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.careWheelEveryday,\n      saying: '五樓，我快等不及了',\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.universityFoundField,\n      saying: '五樓要不要藉這個機會在神明的面前澄清一下？',\n      attachMedia: 'wvWFAMT.jpg',\n      mediaType: 'pic',\n      time: '4天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.sparkJoy,\n      saying: `臺灣的碰有打家好～\n      今天要來教打家年後清理臉書版面的小妙招分享\n      1. 點進去五樓的粉絲團\n      2. 啊～原來ＸＸＸ和其他 10 位朋友都說這個讚\n      3. 果斷斷開好友連結\n      #怦然心動的臉書整理魔法\n      #簡單三步驟打家學會了嗎`,\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    }\n  ]\n  createCommentReactions(comments[0].id, commentReacts, 452, [2, 0, 0, 1])\n  createCommentReactions(comments[1].id, commentReacts, 582, [3, 2, 0, 1])\n  createCommentReactions(comments[2].id, commentReacts, 3120, [2, 1])\n  createCommentReactions(comments[3].id, commentReacts, 187, [0, 0, 0, 0, 0, 1])\n  createCommentReactions(comments[4].id, commentReacts, 987, [2, 0, 0, 0, 0, 1])\n  createCommentReactions(comments[5].id, commentReacts, 501, [2, 3])\n  createCommentReactions(comments[6].id, commentReacts, 872, [2, 1, 0, 1, 2])\n  createCommentReactions(comments[7].id, commentReacts, 789, [2, 1, 0, 1])\n  for (let i = 0; i < commentsTotal; i++) {\n    if (comments[i] === undefined) {\n      comments.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        saying: '假留言',\n        time: `${i}天`,\n        targetId: FEEDBACK.TARGET,\n        reactId: uuidv1(),\n        isHidden: false\n      })\n    }\n  }\n  if (comments.length > commentsTotal) {\n    comments.splice(commentsTotal)\n  }\n  const commentObj = { comments, commentReacts }\n  return commentObj\n}\n\n/**\n * create fake shares.\n * @param {sharesTotal} sharesTotal\n *  How many shares to make, 290 will pass down if omitted.\n * @returns {shares}\n *  An array of objects contains the following properties:\n *  @prop {name}\n *    The user's profile name\n */\nexport const createShares = sharesTotal => {\n  const shares = [\n    { id: uuidv1(), user: definedUsers.terryGoodTiming },\n    { id: uuidv1(), user: definedUsers.koreanFish },\n    { id: uuidv1(), user: definedUsers.english },\n    { id: uuidv1(), user: definedUsers.toolMan },\n    { id: uuidv1(), user: definedUsers.dingDing },\n    { id: uuidv1(), user: definedUsers.universityFoundField },\n    { id: uuidv1(), user: definedUsers.careWheelEveryday },\n    { id: uuidv1(), user: definedUsers.sparkJoy }\n  ]\n  for (let i = 0; i < sharesTotal; i++) {\n    if (shares[i] === undefined) {\n      shares.push({ id: uuidv1(), user: getFakeUser(i) })\n    }\n  }\n  if (shares.length > sharesTotal) {\n    shares.splice(sharesTotal)\n  }\n  return shares\n}\n\nexport const createPostData = (\n  reactsTotal = 17419,\n  commentsTotal = 1552,\n  sharesTotal = 2871\n) => {\n  const reacts = createReactions(reactsTotal)\n  const { comments, commentReacts } = createComments(commentsTotal)\n  const initPostDatas = {\n    reacts,\n    commentReacts,\n    comments,\n    shares: createShares(sharesTotal)\n  }\n  return initPostDatas\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"76109db641415fd2f8fd.worker.js\");\n};"],"sourceRoot":""}