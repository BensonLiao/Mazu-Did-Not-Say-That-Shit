{"version":3,"sources":["actions/index.js","registerServiceWorker.js","reducers/react.js","reducers/commentReact.js","reducers/comment.js","reducers/share.js","reducers/index.js","configureStore.js","sagas/index.js","index.js","utils/dataMock.js"],"names":["FEEDBACK","REACT","UNDO_REACT","COMMENT_REACT","UNDO_COMMENT_REACT","COMMENT","UNDO_COMMENT","UPDATE_COMMENT","COMMENT_VISIBILITY_TOGGLE","SHARE","TARGET","module","exports","REQUEST_LODA_DATA","LOAD_DATA","requestLoadData","type","payload","reacts","commentReacts","comments","shares","loadData","entities","REACTIONS","LIKE","HAHA","LOVE","WOW","SAD","ANGRY","feedbackReact","undoReact","id","feedbackReactToComment","undoReactToComment","feedbackComment","undoComment","updateComment","saying","toggleCommentVisibility","feedbackShare","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reactsById","produce","draft","action","Object","keys","forEach","addReactByNormalizr","addReact","removeReact","allReact","items","isFetching","push","addReactIdByNormalizr","unshift","addReactId","splice","findIndex","reactId","removeReactId","reactReducer","combineReducers","byId","allIds","commentReactReducer","commentsById","addCommentByNormalizr","addComment","removeComment","currentVisibility","isHidden","allComment","addCommentIdByNormalizr","addCommentId","removeCommentId","commentReducer","sharesById","addShareByNormalizr","allShare","addShareIdByNormalizr","shareReducer","rootReducer","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","runSaga","run","fetchPostApi","requestFetchPost","startup","root","requestDelay","delay","endPoint","axios","get","response","data","json","err","result","all","call","put","fork","takeLatest","store","rootSaga","post","user","definedUsers","theMazu","time","content","title","App","React","lazy","ReactDOM","render","fallback","postData","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","goldXFive","uuidv1","profileName","profileLink","profileImg","isVerified","terryGoodTiming","dingDing","toolMan","english","koreanFish","careWheelEveryday","universityFoundField","sparkJoy","getFakeUser","nameId","gender","maleUserImg","femaleUserImg","userImg"],"mappings":"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","file":"static/js/main.964de72d.chunk.js","sourcesContent":["const REQUEST_LODA_DATA = 'REQUEST_LODA_DATA'\nconst LOAD_DATA = 'LOAD_DATA'\n\nconst requestLoadData = () => ({\n  type: REQUEST_LODA_DATA,\n  payload: {\n    reacts: [],\n    commentReacts: [],\n    comments: [],\n    shares: []\n  }\n})\n\nconst loadData = ({ entities }) => ({\n  type: LOAD_DATA,\n  payload: entities\n})\n\nconst FEEDBACK = {\n  REACT: 'REACT',\n  UNDO_REACT: 'UNDO_REACT',\n  COMMENT_REACT: 'COMMENT_REACT',\n  UNDO_COMMENT_REACT: 'UNDO_COMMENT_REACT',\n  COMMENT: 'COMMENT',\n  UNDO_COMMENT: 'UNDO_COMMENT',\n  UPDATE_COMMENT: 'UPDATE_COMMENT',\n  COMMENT_VISIBILITY_TOGGLE: 'COMMECOMMENT_VISIBILITY_TOGGLENT_HIDE',\n  SHARE: 'SHARE',\n  TARGET: 'POST'\n}\n\nconst REACTIONS = {\n  LIKE: 'LIKE',\n  HAHA: 'HAHA',\n  LOVE: 'LOVE',\n  WOW: 'WOW',\n  SAD: 'SAD',\n  ANGRY: 'ANGRY'\n}\n\nconst feedbackReact = ({ entities }) => ({\n  type: FEEDBACK.REACT,\n  payload: entities\n})\n\nconst undoReact = id => ({\n  type: FEEDBACK.UNDO_REACT,\n  payload: {\n    id\n  }\n})\n\nconst feedbackReactToComment = ({ entities }) => ({\n  type: FEEDBACK.COMMENT_REACT,\n  payload: entities\n})\n\nconst undoReactToComment = id => ({\n  type: FEEDBACK.UNDO_COMMENT_REACT,\n  payload: {\n    id\n  }\n})\n\nconst feedbackComment = ({ entities }) => ({\n  type: FEEDBACK.COMMENT,\n  payload: entities\n})\n\nconst undoComment = id => ({\n  type: FEEDBACK.UNDO_COMMENT,\n  payload: {\n    id\n  }\n})\n\nconst updateComment = ({ id, saying }) => ({\n  type: FEEDBACK.UPDATE_COMMENT,\n  payload: {\n    id,\n    saying\n  }\n})\n\nconst toggleCommentVisibility = id => ({\n  type: FEEDBACK.COMMENT_VISIBILITY_TOGGLE,\n  payload: {\n    id\n  }\n})\n\nconst feedbackShare = ({ entities }) => ({\n  type: FEEDBACK.SHARE,\n  payload: entities\n})\n\nmodule.exports = {\n  REQUEST_LODA_DATA,\n  LOAD_DATA,\n  requestLoadData,\n  loadData,\n  FEEDBACK,\n  REACTIONS,\n  feedbackReact,\n  undoReact,\n  feedbackReactToComment,\n  undoReactToComment,\n  feedbackComment,\n  undoComment,\n  updateComment,\n  toggleCommentVisibility,\n  feedbackShare\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { REQUEST_LODA_DATA, LOAD_DATA, FEEDBACK } from '../actions'\n\nconst addReactByNormalizr = (draft, action) => {\n  const {\n    payload: { reacts }\n  } = action\n  Object.keys(reacts).forEach(id => {\n    draft[id] = reacts[id]\n  })\n}\n\nconst addReact = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeReact = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst reactsById = produce((draft, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n      addReactByNormalizr(draft, action)\n      break\n    case FEEDBACK.REACT:\n      addReact(draft, action)\n      break\n    case FEEDBACK.UNDO_REACT:\n      removeReact(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addReactIdByNormalizr = (draft, action) => {\n  const {\n    type,\n    payload: { reacts }\n  } = action\n  // Extract object and append all its react's ID to the list of allIds\n  switch (type) {\n    case REQUEST_LODA_DATA:\n      draft.items = reacts\n      draft.isFetching = true\n      break\n    case LOAD_DATA:\n      Object.keys(reacts).forEach(id => {\n        draft.items.push(id)\n      })\n      draft.isFetching = false\n      break\n    default:\n  }\n}\n\nconst addReactId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Prepend the new react's ID to the list of allIds\n  draft.items.unshift(id)\n}\n\nconst removeReactId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Remove the react's ID from the list of allIds\n  draft.items.splice(draft.items.findIndex(reactId => reactId === id), 1)\n}\n\nconst allReact = produce((draft, action) => {\n  switch (action.type) {\n    case REQUEST_LODA_DATA:\n    case LOAD_DATA:\n      addReactIdByNormalizr(draft, action)\n      break\n    case FEEDBACK.REACT:\n      addReactId(draft, action)\n      break\n    case FEEDBACK.UNDO_REACT:\n      removeReactId(draft, action)\n      break\n    default:\n  }\n}, { items: [], isFetching: false })\n\nconst reactReducer = combineReducers({\n  byId: reactsById,\n  allIds: allReact\n})\n\nexport default reactReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { REQUEST_LODA_DATA, LOAD_DATA, FEEDBACK } from '../actions'\n\nconst addReactByNormalizr = (draft, action) => {\n  const {\n    payload: { commentReacts }\n  } = action\n  Object.keys(commentReacts).forEach(id => {\n    draft[id] = commentReacts[id]\n  })\n}\n\nconst addReact = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeReact = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst reactsById = produce((draft, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n      addReactByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT_REACT:\n      addReact(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT_REACT:\n      removeReact(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addReactIdByNormalizr = (draft, action) => {\n  const {\n    type,\n    payload: { commentReacts }\n  } = action\n  // Extract object and append all its react's ID to the list of allIds\n  switch (type) {\n    case REQUEST_LODA_DATA:\n      draft.items = commentReacts\n      draft.isFetching = true\n      break\n    case LOAD_DATA:\n      Object.keys(commentReacts).forEach(id => {\n        draft.items.push(id)\n      })\n      draft.isFetching = false\n      break\n    default:\n  }\n}\n\nconst addReactId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Prepend the new react's ID to the list of allIds\n  draft.items.unshift(id)\n}\n\nconst removeReactId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Remove the react's ID from the list of allIds\n  draft.items.splice(draft.items.findIndex(reactId => reactId === id), 1)\n}\n\nconst allReact = produce((draft, action) => {\n  switch (action.type) {\n    case REQUEST_LODA_DATA:\n    case LOAD_DATA:\n      addReactIdByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT_REACT:\n      addReactId(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT_REACT:\n      removeReactId(draft, action)\n      break\n    default:\n  }\n}, { items: [], isFetching: false })\n\nconst commentReactReducer = combineReducers({\n  byId: reactsById,\n  allIds: allReact\n})\n\nexport default commentReactReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { REQUEST_LODA_DATA, LOAD_DATA, FEEDBACK } from '../actions'\n\nconst addCommentByNormalizr = (draft, action) => {\n  const {\n    payload: { comments }\n  } = action\n  Object.keys(comments).forEach(id => {\n    draft[id] = comments[id]\n  })\n}\n\nconst addComment = (draft, action) => {\n  const { payload } = action\n  draft[payload.id] = payload\n}\n\nconst removeComment = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  delete draft[id]\n}\n\nconst updateComment = (draft, action) => {\n  const {\n    payload: { id, saying }\n  } = action\n  draft[id].saying = saying\n}\n\nconst toggleCommentVisibility = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  const currentVisibility = draft[id].isHidden\n  draft[id].isHidden = !currentVisibility\n}\n\nconst commentsById = produce((draft, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n      addCommentByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT:\n      addComment(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT:\n      removeComment(draft, action)\n      break\n    case FEEDBACK.UPDATE_COMMENT:\n      updateComment(draft, action)\n      break\n    case FEEDBACK.COMMENT_VISIBILITY_TOGGLE:\n      toggleCommentVisibility(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addCommentIdByNormalizr = (draft, action) => {\n  const {\n    type,\n    payload: { comments }\n  } = action\n  // Extract object and append all its comments's ID to the list of allIds.items\n  switch (type) {\n    case REQUEST_LODA_DATA:\n      draft.items = comments\n      draft.isFetching = true\n      break\n    case LOAD_DATA:\n      Object.keys(comments).forEach(id => {\n        draft.items.push(id)\n      })\n      draft.isFetching = false\n      break\n    default:\n  }\n}\n\nconst addCommentId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Prepend the new comments's ID to the list of allIds.items\n  draft.items.unshift(id)\n}\n\nconst removeCommentId = (draft, action) => {\n  const {\n    payload: { id }\n  } = action\n  // Remove the comment's ID from the list of allIds.items\n  draft.items.splice(draft.items.findIndex(reactId => reactId === id), 1)\n}\n\nconst allComment = produce((draft, action) => {\n  switch (action.type) {\n    case REQUEST_LODA_DATA:\n    case LOAD_DATA:\n      addCommentIdByNormalizr(draft, action)\n      break\n    case FEEDBACK.COMMENT:\n      addCommentId(draft, action)\n      break\n    case FEEDBACK.UNDO_COMMENT:\n      removeCommentId(draft, action)\n      break\n    default:\n  }\n}, { items: [], isFetching: false })\n\nconst commentReducer = combineReducers({\n  byId: commentsById,\n  allIds: allComment\n})\n\nexport default commentReducer\n","import { combineReducers } from 'redux'\nimport produce from 'immer'\nimport { REQUEST_LODA_DATA, LOAD_DATA, FEEDBACK } from '../actions'\n\nconst addShareByNormalizr = (draft, action) => {\n  const {\n    payload: { shares }\n  } = action\n  Object.keys(shares).forEach(id => {\n    draft[id] = shares[id]\n  })\n}\n\nconst sharesById = produce((draft, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n    case FEEDBACK.SHARE:\n      addShareByNormalizr(draft, action)\n      break\n    default:\n  }\n}, {})\n\nconst addShareIdByNormalizr = (draft, action) => {\n  const {\n    type,\n    payload: { shares }\n  } = action\n  switch (type) {\n    case REQUEST_LODA_DATA:\n      draft.items = shares\n      draft.isFetching = true\n      break\n    case LOAD_DATA:\n    case FEEDBACK.SHARE:\n      Object.keys(shares).forEach(id => {\n        draft.items.push(id)\n      })\n      draft.isFetching = false\n      break\n    default:\n  }\n}\n\nconst allShare = produce((draft, action) => {\n  switch (action.type) {\n    case REQUEST_LODA_DATA:\n    case LOAD_DATA:\n    case FEEDBACK.SHARE:\n      addShareIdByNormalizr(draft, action)\n      break\n    default:\n  }\n}, { items: [], isFetching: false })\n\nconst shareReducer = combineReducers({\n  byId: sharesById,\n  allIds: allShare\n})\n\nexport default shareReducer\n","import { combineReducers } from 'redux'\nimport reactReducer from './react'\nimport commentReactReducer from './commentReact'\nimport commentReducer from './comment'\nimport shareReducer from './share'\n\nconst rootReducer = combineReducers({\n  reactReducer,\n  commentReactReducer,\n  commentReducer,\n  shareReducer\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\n\nconst configureStore = preloadedState => {\n  const sagaMiddleware = createSagaMiddleware()\n  return {\n    ...createStore(\n      rootReducer,\n      preloadedState,\n      composeWithDevTools(applyMiddleware(sagaMiddleware))\n    ),\n    runSaga: sagaMiddleware.run\n  }\n}\n\nexport default configureStore\n","import { put, call, fork, all, takeLatest, delay } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { REQUEST_LODA_DATA, requestLoadData, loadData } from '../actions'\n\n// request delay for shimmer animation run properly\n// when async promise request finishes too quick\nconst requestDelay = delay(2000)\n\nexport function* fetchPostApi(endPoint) {\n  const result = yield axios\n    .get(`api/${endPoint}.json`)\n    .then(response => response.data)\n    .then(json => json.data)\n    .catch(err => console.log('A fetch err occurs: ', err))\n  return result\n}\n\nexport function* requestFetchPost() {\n  const [, result] = yield all([requestDelay, call(fetchPostApi, 'db')])\n  yield put(loadData(result))\n}\n\nexport function* startup() {\n  yield put(requestLoadData())\n}\n\nexport default function* root() {\n  yield fork(startup)\n  yield takeLatest(REQUEST_LODA_DATA, requestFetchPost)\n}\n","/* eslint-disable global-require */\n/* eslint import/no-webpack-loader-syntax: off */\n// As of Babel 7.4.0, this package has been deprecated in favor of directly\n// including core-js/stable (to polyfill ECMAScript features)\n// and regenerator-runtime/runtime (needed to use transpiled generator functions):\n// import 'core-js/stable'\n// import 'regenerator-runtime/runtime'\n// ref: https://babeljs.io/docs/en/babel-polyfill\nimport 'regenerator-runtime/runtime'\nimport 'core-js/stable/object/keys'\nimport 'core-js/stable/array/is-array'\nimport 'core-js/stable/array/for-each'\nimport 'core-js/stable/array/sort'\nimport 'core-js/stable/array/filter'\nimport 'core-js/stable/array/map'\nimport 'core-js/stable/array/reduce'\nimport 'core-js/stable/string/replace'\nimport 'core-js/stable/string/split'\nimport 'core-js/stable/string/includes'\nimport 'core-js/stable/string/starts-with'\nimport 'core-js/stable/number/to-fixed'\nimport 'core-js/stable/date/now'\nimport React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport registerServiceWorker from './registerServiceWorker'\nimport configureStore from './configureStore'\nimport { definedUsers } from './utils/dataMock'\nimport rootSaga from './sagas'\n\nconst store = configureStore()\nstore.runSaga(rootSaga)\n\nconst post = {\n  id: 'POST',\n  user: definedUsers.theMazu,\n  time: 1555495920000,\n  // UNIX-timestamp in milli-sec for local time: 2019/04/17 18:12:00\n  content: '我根本沒說。',\n  title: 'I did not say that shit.'\n}\n\nconst App = React.lazy(() => import('./components/App'))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<div>Loading...</div>}>\n      <App postData={post} />\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n","import uuidv1 from 'uuid/v1'\nimport { REACTIONS, FEEDBACK } from '../actions'\n\nexport const definedUsers = {\n  goldXFive: {\n    id: uuidv1(),\n    profileName: '金乘五',\n    profileLink: 'https://www.facebook.com/takeshikaneshirofanspage/',\n    profileImg: 'goldxfive.png',\n    isVerified: false\n  },\n  theMazu: {\n    id: uuidv1(),\n    profileName: '媽祖',\n    profileLink: 'https://www.facebook.com/themazhou/',\n    profileImg: 'mazu.png',\n    isVerified: false\n  },\n  terryGoodTiming: {\n    id: uuidv1(),\n    profileName: '鍋苔冥',\n    profileLink: 'https://www.facebook.com/TerryGou1018/',\n    profileImg: 'terry.png',\n    isVerified: true\n  },\n  dingDing: {\n    id: uuidv1(),\n    profileName: '叮守鐘',\n    profileLink: 'https://www.youtube.com/watch?v=_97bLScvHWs',\n    profileImg: 'dingding.png',\n    isVerified: false\n  },\n  toolMan: {\n    id: uuidv1(),\n    profileName: '台灣工具伯 汪進坪',\n    profileLink: 'https://www.facebook.com/jingping.tw/',\n    profileImg: 'toolman.png',\n    isVerified: true\n  },\n  english: {\n    id: uuidv1(),\n    profileName: '菜應蚊',\n    profileLink: 'https://www.facebook.com/tsaiingwen/',\n    profileImg: 'english.png',\n    isVerified: true\n  },\n  koreanFish: {\n    id: uuidv1(),\n    profileName: '韓國魚',\n    profileLink: 'https://www.facebook.com/twherohan/',\n    profileImg: 'korean-fish.png',\n    isVerified: true\n  },\n  careWheelEveryday: {\n    id: uuidv1(),\n    profileName: '每天關心愛情摩天輪的興建狀況',\n    profileLink: 'https://www.facebook.com/CareLoveFerrisWheelEveryday/',\n    profileImg: 'wheel.png',\n    isVerified: false\n  },\n  universityFoundField: {\n    id: uuidv1(),\n    profileName: '找到田大學',\n    profileLink: '#',\n    profileImg: 'anonymous-university.png',\n    isVerified: false\n  },\n  sparkJoy: {\n    id: uuidv1(),\n    profileName: '尛理惠的整理魔法',\n    profileLink: '#',\n    profileImg: 'sparkJoy.jpg',\n    isVerified: true\n  }\n}\n\nconst definedReactors = [\n  definedUsers.terryGoodTiming,\n  definedUsers.koreanFish,\n  definedUsers.universityFoundField,\n  definedUsers.english,\n  definedUsers.toolMan,\n  definedUsers.dingDing\n]\n\n/**\n * Get user object for reactions with the following properties:\n *   @prop {id}\n *   @prop {profileName}\n *   @prop {profileLink}\n *   @prop {profileImg}\n * @param {nameId} nameId\n *  An id to distinguish from users,\n *  will append to @prop {profileName}.\n * @param {gender} gender\n *  Choose an img represent gender, `MALE` if ommited.\n */\nexport const getReactor = (nameId, gender = 'MALE') => {\n  const user = nameId < definedReactors.length ?\n    definedReactors[nameId] :\n    getFakeUser(nameId, gender)\n  return user\n}\n\n/**\n * Get fake user object with the following properties:\n *   @prop {id}\n *   @prop {profileName}\n *   @prop {profileLink}\n *   @prop {profileImg}\n * @param {nameId} nameId\n *  An id to distinguish from users,\n *  will append to @prop {profileName}.\n * @param {gender} gender\n *  Choose an img represent gender, `MALE` if ommited.\n */\nexport const getFakeUser = (nameId, gender = 'MALE') => {\n  const maleUserImg = 'anonymous-male.png'\n  const femaleUserImg = 'anonymous-female.png'\n  const userImg = gender === 'MALE' ? maleUserImg : femaleUserImg\n  return {\n    id: uuidv1(),\n    profileName: `假帳號${nameId}`,\n    profileLink: '#',\n    profileImg: userImg,\n    isVerified: false\n  }\n}\n\nconst createCommentReactions = (\n  commentId,\n  commentReacts,\n  commentReactsTotal = 200,\n  ratio = [3, 2, 1]\n) => {\n  if (typeof commentId !== 'string') {\n    throw new Error('Comment id must be string.')\n  }\n  if (ratio.length > 6 || ratio.length < 1) {\n    throw new Error('Ratio must be 1 to 6 numbers.')\n  }\n  if (ratio.filter(r => typeof r !== 'number').length > 0) {\n    throw new Error('Array of ratio must be type of number.')\n  }\n  // Calculate reations feeling distribution by ratio\n  // If commentReactsTotal < ratioTotal, ratio will be [1] for full of Likes\n  const ratioTotal = ratio.reduce((r, acc) => r + acc)\n  const ratioAvailable = commentReactsTotal >= ratioTotal\n  const divisorLike = ratioAvailable ? ratioTotal / ratio[0] : 1\n  const divisorHaha = ratioAvailable && ratio[1] ? ratioTotal / ratio[1] : 0\n  const divisorLove = ratioAvailable && ratio[2] ? ratioTotal / ratio[2] : 0\n  const divisorWow = ratioAvailable && ratio[3] ? ratioTotal / ratio[3] : 0\n  const divisorSad = ratioAvailable && ratio[4] ? ratioTotal / ratio[4] : 0\n  const divisorAnger = ratioAvailable && ratio[5] ? ratioTotal / ratio[5] : 0\n  const totalLikes =\n    divisorLike === 0 ? 0 : Math.ceil(commentReactsTotal / divisorLike)\n  const totalHahas =\n    divisorHaha === 0 ? 0 : Math.ceil(commentReactsTotal / divisorHaha)\n  const totalLoves =\n    divisorLove === 0 ? 0 : Math.ceil(commentReactsTotal / divisorLove)\n  const totalWows =\n    divisorWow === 0 ? 0 : Math.ceil(commentReactsTotal / divisorWow)\n  const totalSads =\n    divisorSad === 0 ? 0 : Math.ceil(commentReactsTotal / divisorSad)\n  const totalAngers =\n    divisorAnger === 0 ? 0 : Math.ceil(commentReactsTotal / divisorAnger)\n  for (let i = 0; i < commentReactsTotal; i++) {\n    if (i < totalLikes) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.LIKE,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.HAHA,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.LOVE,\n        targetId: commentId\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves + totalWows) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.WOW,\n        targetId: commentId\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads\n    ) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.SAD,\n        targetId: commentId\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads + totalAngers\n    ) {\n      commentReacts.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        feeling: REACTIONS.ANGRY,\n        targetId: commentId\n      })\n    }\n  }\n}\n\n/**\n * create fake reactions with default ratio of\n * 1/2 of Likes, 1/3 of Hahas and 1/6 of Loves\n * if @param {ratio} ratio was omitted.\n * @param {totalReactions} totalReactions\n *  How many comments to make.\n * @param {ratio} ratio\n *  How to distribute the ratio of reaction type,\n *  accept only an array of 1 to 6 numbers,\n *  and ignore the omitted numbers.\n *  eg. `[3,2,1]` will distribute the ratio for\n *  3/(3+2+1) of `Like`, 2/(3+2+1) of `Haha`,\n *  1/(3+2+1) of `Love` and empty ratio for the rest of types.\n *  eg2. `[1]` will distribute the ratio for full of `Like`.\n *  eg3. `[0,0,0,0,0,1]` will distribute the ratio for full of `Anger`.\n *  eg4. `[0,0,0,0,1]` will distribute the ratio for full of `Sad`.\n * @returns {reactObj}\n *  An object contains th following properties:\n *  @prop {reacts}\n *   An array of objects contains the following properties:\n *   @prop {name}\n *    The user's profile name\n *   @prop {feeling}\n *    The react's feeling: `Like`, `Haha`, `Love`,\n *    `Wow`, `Sad`, `Anger`\n *  @prop {commentIds}\n *   An array of @prop {commentId}, type is string.\n *   For @function createComments .\n */\nexport const createReactions = (totalReactions, ratio = [3, 2, 1]) => {\n  if (totalReactions < 1) {\n    throw new Error('Number of total reactions at least to be 1.')\n  }\n  if (ratio.length > 6 || ratio.length < 1) {\n    throw new Error('Ratio must be 1 to 6 numbers.')\n  }\n  if (ratio.filter(r => typeof r !== 'number').length > 0) {\n    throw new Error('Array of ratio must be type of number.')\n  }\n  // Calculate reations feeling distribution by ratio\n  // If totalReactions < ratioTotal, ratio will be [1] for full of Likes\n  const ratioTotal = ratio.reduce((r, acc) => r + acc)\n  const ratioAvailable = totalReactions >= ratioTotal\n  const divisorLike = ratioAvailable ? ratioTotal / ratio[0] : 1\n  const divisorHaha = ratioAvailable && ratio[1] ? ratioTotal / ratio[1] : 0\n  const divisorLove = ratioAvailable && ratio[2] ? ratioTotal / ratio[2] : 0\n  const divisorWow = ratioAvailable && ratio[3] ? ratioTotal / ratio[3] : 0\n  const divisorSad = ratioAvailable && ratio[4] ? ratioTotal / ratio[4] : 0\n  const divisorAnger = ratioAvailable && ratio[5] ? ratioTotal / ratio[5] : 0\n  const totalLikes =\n    divisorLike === 0 ? 0 : Math.ceil(totalReactions / divisorLike)\n  const totalHahas =\n    divisorHaha === 0 ? 0 : Math.ceil(totalReactions / divisorHaha)\n  const totalLoves =\n    divisorLove === 0 ? 0 : Math.ceil(totalReactions / divisorLove)\n  const totalWows =\n    divisorWow === 0 ? 0 : Math.ceil(totalReactions / divisorWow)\n  const totalSads =\n    divisorSad === 0 ? 0 : Math.ceil(totalReactions / divisorSad)\n  const totalAngers =\n    divisorAnger === 0 ? 0 : Math.ceil(totalReactions / divisorAnger)\n  // Add reactions as many as totalReactions\n  // And the first n reactions is pre-defined reactors\n  // (n = length of pre-defined reactors)\n  // Or (totalReactions + commentReactsTotal) reactions for comments\n  // if totalComments > 0\n  const reacts = []\n  for (let i = 0; i < totalReactions; i++) {\n    if (i < totalLikes) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.LIKE,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.HAHA,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.LOVE,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (i < totalLikes + totalHahas + totalLoves + totalWows) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.WOW,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads\n    ) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.SAD,\n        targetId: FEEDBACK.TARGET\n      })\n    } else if (\n      i <\n      totalLikes + totalHahas + totalLoves + totalWows + totalSads + totalAngers\n    ) {\n      reacts.push({\n        id: uuidv1(),\n        user: getReactor(i),\n        feeling: REACTIONS.ANGRY,\n        targetId: FEEDBACK.TARGET\n      })\n    }\n  }\n  return reacts\n}\n\n/**\n * create fake comments.\n * @param {commentIds} commentIds\n *  How many comments to make, based on output of\n *  @function createReactions .\n * @returns {comments}\n *  An array of objects contains the following properties:\n *  @prop {name}\n *    The user's profile name\n */\nexport const createComments = commentsTotal => {\n  const commentReacts = []\n  const comments = [\n    {\n      id: uuidv1(),\n      user: definedUsers.dingDing,\n      saying: '可以托夢讓我重選台北市長嗎？',\n      time: '4天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.toolMan,\n      saying: '這個我想，要查證比較難啦',\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.english,\n      saying: '我也這麼覺得',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.terryGoodTiming,\n      saying: '謝謝樓主托夢，三樓的民主不能當飯吃！',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.koreanFish,\n      saying: '樓上為什麼不考慮吃個包子呢？',\n      time: '3天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.careWheelEveryday,\n      saying: '五樓，我快等不及了',\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.universityFoundField,\n      saying: '五樓要不要藉這個機會在神明的面前澄清一下？',\n      attachMedia: 'wvWFAMT.jpg',\n      mediaType: 'pic',\n      time: '4天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    },\n    {\n      id: uuidv1(),\n      user: definedUsers.sparkJoy,\n      saying: `臺灣的碰有打家好～\n      今天要來教打家年後清理臉書版面的小妙招分享\n      1. 點進去五樓的粉絲團\n      2. 啊～原來ＸＸＸ和其他 10 位朋友都說這個讚\n      3. 果斷斷開好友連結\n      #怦然心動的臉書整理魔法\n      #簡單三步驟打家學會了嗎`,\n      time: '5天',\n      targetId: FEEDBACK.TARGET,\n      reactId: uuidv1(),\n      isHidden: false\n    }\n  ]\n  createCommentReactions(comments[0].id, commentReacts, 452, [2, 0, 0, 1])\n  createCommentReactions(comments[1].id, commentReacts, 582, [3, 2, 0, 1])\n  createCommentReactions(comments[2].id, commentReacts, 3120, [2, 1])\n  createCommentReactions(comments[3].id, commentReacts, 187, [0, 0, 0, 0, 0, 1])\n  createCommentReactions(comments[4].id, commentReacts, 987, [2, 0, 0, 0, 0, 1])\n  createCommentReactions(comments[5].id, commentReacts, 501, [2, 3])\n  createCommentReactions(comments[6].id, commentReacts, 872, [2, 1, 0, 1, 2])\n  createCommentReactions(comments[7].id, commentReacts, 789, [2, 1, 0, 1])\n  for (let i = 0; i < commentsTotal; i++) {\n    if (comments[i] === undefined) {\n      comments.push({\n        id: uuidv1(),\n        user: getFakeUser(i),\n        saying: '假留言',\n        time: `${i}天`,\n        targetId: FEEDBACK.TARGET,\n        reactId: uuidv1(),\n        isHidden: false\n      })\n    }\n  }\n  if (comments.length > commentsTotal) {\n    comments.splice(commentsTotal)\n  }\n  const commentObj = { comments, commentReacts }\n  return commentObj\n}\n\n/**\n * create fake shares.\n * @param {sharesTotal} sharesTotal\n *  How many shares to make, 290 will pass down if omitted.\n * @returns {shares}\n *  An array of objects contains the following properties:\n *  @prop {name}\n *    The user's profile name\n */\nexport const createShares = sharesTotal => {\n  const shares = [\n    { id: uuidv1(), user: definedUsers.terryGoodTiming },\n    { id: uuidv1(), user: definedUsers.koreanFish },\n    { id: uuidv1(), user: definedUsers.english },\n    { id: uuidv1(), user: definedUsers.toolMan },\n    { id: uuidv1(), user: definedUsers.dingDing },\n    { id: uuidv1(), user: definedUsers.universityFoundField },\n    { id: uuidv1(), user: definedUsers.careWheelEveryday },\n    { id: uuidv1(), user: definedUsers.sparkJoy }\n  ]\n  for (let i = 0; i < sharesTotal; i++) {\n    if (shares[i] === undefined) {\n      shares.push({ id: uuidv1(), user: getFakeUser(i) })\n    }\n  }\n  if (shares.length > sharesTotal) {\n    shares.splice(sharesTotal)\n  }\n  return shares\n}\n\nexport const createPostData = (\n  reactsTotal = 17419,\n  commentsTotal = 1552,\n  sharesTotal = 2871\n) => {\n  const reacts = createReactions(reactsTotal)\n  const { comments, commentReacts } = createComments(commentsTotal)\n  const initPostDatas = {\n    reacts,\n    commentReacts,\n    comments,\n    shares: createShares(sharesTotal)\n  }\n  return initPostDatas\n}\n"],"sourceRoot":""}